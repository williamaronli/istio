// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pkg/apis/istio/v1alpha1/values_types.proto

package v1alpha1

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	protobuf "github.com/gogo/protobuf/types"
	types "github.com/gogo/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Mode for the ingress controller.
type IngressControllerMode int32

const (
	// Unspecified Istio ingress controller.
	IngressControllerMode_UNSPECIFIED IngressControllerMode = 0
	// Selects all Ingress resources, with or without Istio annotation.
	IngressControllerMode_DEFAULT IngressControllerMode = 1
	// Selects only resources with istio annotation.
	IngressControllerMode_STRICT IngressControllerMode = 2
	// No ingress or sync.
	IngressControllerMode_OFF IngressControllerMode = 3
)

var IngressControllerMode_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "DEFAULT",
	2: "STRICT",
	3: "OFF",
}

var IngressControllerMode_value = map[string]int32{
	"UNSPECIFIED": 0,
	"DEFAULT":     1,
	"STRICT":      2,
	"OFF":         3,
}

func (x IngressControllerMode) String() string {
	return proto.EnumName(IngressControllerMode_name, int32(x))
}

func (IngressControllerMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{0}
}

// Specifies which tracer to use.
type Tracer int32

const (
	Tracer_zipkin      Tracer = 0
	Tracer_lightstep   Tracer = 1
	Tracer_datadog     Tracer = 2
	Tracer_stackdriver Tracer = 3
)

var Tracer_name = map[int32]string{
	0: "zipkin",
	1: "lightstep",
	2: "datadog",
	3: "stackdriver",
}

var Tracer_value = map[string]int32{
	"zipkin":      0,
	"lightstep":   1,
	"datadog":     2,
	"stackdriver": 3,
}

func (x Tracer) String() string {
	return proto.EnumName(Tracer_name, int32(x))
}

func (Tracer) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{1}
}

// Specifies the sidecar's default behavior when handling outbound traffic from the application.
type OutboundTrafficPolicyConfig_Mode int32

const (
	// Outbound traffic to unknown destinations will be allowed, in case there are no services or ServiceEntries for the destination port
	OutboundTrafficPolicyConfig_ALLOW_ANY OutboundTrafficPolicyConfig_Mode = 0
	// Restrict outbound traffic to services defined in the service registry as well as those defined through ServiceEntries
	OutboundTrafficPolicyConfig_REGISTRY_ONLY OutboundTrafficPolicyConfig_Mode = 1
)

var OutboundTrafficPolicyConfig_Mode_name = map[int32]string{
	0: "ALLOW_ANY",
	1: "REGISTRY_ONLY",
}

var OutboundTrafficPolicyConfig_Mode_value = map[string]int32{
	"ALLOW_ANY":     0,
	"REGISTRY_ONLY": 1,
}

func (x OutboundTrafficPolicyConfig_Mode) String() string {
	return proto.EnumName(OutboundTrafficPolicyConfig_Mode_name, int32(x))
}

func (OutboundTrafficPolicyConfig_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{19, 0}
}

// ArchConfig specifies the pod scheduling target architecture(amd64, ppc64le, s390x) for all the Istio control plane components.
type ArchConfig struct {
	// Sets pod scheduling weight for amd64 arch
	Amd64 uint32 `protobuf:"varint,1,opt,name=amd64,proto3" json:"amd64,omitempty"`
	// Sets pod scheduling weight for ppc64le arch.
	Ppc64Le uint32 `protobuf:"varint,2,opt,name=ppc64le,proto3" json:"ppc64le,omitempty"`
	// Sets pod scheduling weight for s390x arch.
	S390X                uint32   `protobuf:"varint,3,opt,name=s390x,proto3" json:"s390x,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchConfig) Reset()         { *m = ArchConfig{} }
func (m *ArchConfig) String() string { return proto.CompactTextString(m) }
func (*ArchConfig) ProtoMessage()    {}
func (*ArchConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{0}
}
func (m *ArchConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchConfig.Unmarshal(m, b)
}
func (m *ArchConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchConfig.Marshal(b, m, deterministic)
}
func (m *ArchConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchConfig.Merge(m, src)
}
func (m *ArchConfig) XXX_Size() int {
	return xxx_messageInfo_ArchConfig.Size(m)
}
func (m *ArchConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ArchConfig proto.InternalMessageInfo

func (m *ArchConfig) GetAmd64() uint32 {
	if m != nil {
		return m.Amd64
	}
	return 0
}

func (m *ArchConfig) GetPpc64Le() uint32 {
	if m != nil {
		return m.Ppc64Le
	}
	return 0
}

func (m *ArchConfig) GetS390X() uint32 {
	if m != nil {
		return m.S390X
	}
	return 0
}

// Configuration for CNI.
type CNIConfig struct {
	// Controls whether CNI is enabled.
	Enabled              *protobuf.BoolValue     `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Hub                  string                  `protobuf:"bytes,2,opt,name=hub,proto3" json:"hub,omitempty"`
	Tag                  interface{}          `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Image                string                  `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	PullPolicy           string                  `protobuf:"bytes,5,opt,name=pullPolicy,proto3" json:"pullPolicy,omitempty"`
	CniBinDir            string                  `protobuf:"bytes,6,opt,name=cniBinDir,proto3" json:"cniBinDir,omitempty"`
	CniConfDir           string                  `protobuf:"bytes,7,opt,name=cniConfDir,proto3" json:"cniConfDir,omitempty"`
	CniConfFileName      string                  `protobuf:"bytes,8,opt,name=cniConfFileName,proto3" json:"cniConfFileName,omitempty"`
	ExcludeNamespaces    []string                `protobuf:"bytes,9,rep,name=excludeNamespaces,proto3" json:"excludeNamespaces,omitempty"`
	PodAnnotations       map[string]interface{} `protobuf:"bytes,10,opt,name=podAnnotations,proto3" json:"podAnnotations,omitempty"` // Deprecated: Do not use.
	PspClusterRole       string                  `protobuf:"bytes,11,opt,name=psp_cluster_role,json=pspClusterRole,proto3" json:"psp_cluster_role,omitempty"`
	LogLevel             string                  `protobuf:"bytes,12,opt,name=logLevel,proto3" json:"logLevel,omitempty"`
	Repair               *CNIRepairConfig        `protobuf:"bytes,13,opt,name=repair,proto3" json:"repair,omitempty"`
	Chained              *protobuf.BoolValue     `protobuf:"bytes,14,opt,name=chained,proto3" json:"chained,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CNIConfig) Reset()         { *m = CNIConfig{} }
func (m *CNIConfig) String() string { return proto.CompactTextString(m) }
func (*CNIConfig) ProtoMessage()    {}
func (*CNIConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{1}
}
func (m *CNIConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNIConfig.Unmarshal(m, b)
}
func (m *CNIConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNIConfig.Marshal(b, m, deterministic)
}
func (m *CNIConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNIConfig.Merge(m, src)
}
func (m *CNIConfig) XXX_Size() int {
	return xxx_messageInfo_CNIConfig.Size(m)
}
func (m *CNIConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CNIConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CNIConfig proto.InternalMessageInfo

func (m *CNIConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *CNIConfig) GetHub() string {
	if m != nil {
		return m.Hub
	}
	return ""
}

func (m *CNIConfig) GetTag() interface{} {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *CNIConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CNIConfig) GetPullPolicy() string {
	if m != nil {
		return m.PullPolicy
	}
	return ""
}

func (m *CNIConfig) GetCniBinDir() string {
	if m != nil {
		return m.CniBinDir
	}
	return ""
}

func (m *CNIConfig) GetCniConfDir() string {
	if m != nil {
		return m.CniConfDir
	}
	return ""
}

func (m *CNIConfig) GetCniConfFileName() string {
	if m != nil {
		return m.CniConfFileName
	}
	return ""
}

func (m *CNIConfig) GetExcludeNamespaces() []string {
	if m != nil {
		return m.ExcludeNamespaces
	}
	return nil
}

// Deprecated: Do not use.
func (m *CNIConfig) GetPodAnnotations() map[string]interface{} {
	if m != nil {
		return m.PodAnnotations
	}
	return nil
}

func (m *CNIConfig) GetPspClusterRole() string {
	if m != nil {
		return m.PspClusterRole
	}
	return ""
}

func (m *CNIConfig) GetLogLevel() string {
	if m != nil {
		return m.LogLevel
	}
	return ""
}

func (m *CNIConfig) GetRepair() *CNIRepairConfig {
	if m != nil {
		return m.Repair
	}
	return nil
}

func (m *CNIConfig) GetChained() *protobuf.BoolValue {
	if m != nil {
		return m.Chained
	}
	return nil
}

type CNIRepairConfig struct {
	// Controls whether repair behavior is enabled.
	Enabled *protobuf.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Hub     string              `protobuf:"bytes,2,opt,name=hub,proto3" json:"hub,omitempty"`
	Tag     interface{}      `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Image   string              `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	// Controls whether various repair behaviors are enabled.
	LabelPods            bool     `protobuf:"varint,5,opt,name=labelPods,proto3" json:"labelPods,omitempty"`
	CreateEvents         string   `protobuf:"bytes,6,opt,name=createEvents,proto3" json:"createEvents,omitempty"` // Deprecated: Do not use.
	DeletePods           bool     `protobuf:"varint,7,opt,name=deletePods,proto3" json:"deletePods,omitempty"`
	BrokenPodLabelKey    string   `protobuf:"bytes,8,opt,name=brokenPodLabelKey,proto3" json:"brokenPodLabelKey,omitempty"`
	BrokenPodLabelValue  string   `protobuf:"bytes,9,opt,name=brokenPodLabelValue,proto3" json:"brokenPodLabelValue,omitempty"`
	InitContainerName    string   `protobuf:"bytes,10,opt,name=initContainerName,proto3" json:"initContainerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CNIRepairConfig) Reset()         { *m = CNIRepairConfig{} }
func (m *CNIRepairConfig) String() string { return proto.CompactTextString(m) }
func (*CNIRepairConfig) ProtoMessage()    {}
func (*CNIRepairConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{2}
}
func (m *CNIRepairConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNIRepairConfig.Unmarshal(m, b)
}
func (m *CNIRepairConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNIRepairConfig.Marshal(b, m, deterministic)
}
func (m *CNIRepairConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNIRepairConfig.Merge(m, src)
}
func (m *CNIRepairConfig) XXX_Size() int {
	return xxx_messageInfo_CNIRepairConfig.Size(m)
}
func (m *CNIRepairConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CNIRepairConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CNIRepairConfig proto.InternalMessageInfo

func (m *CNIRepairConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *CNIRepairConfig) GetHub() string {
	if m != nil {
		return m.Hub
	}
	return ""
}

func (m *CNIRepairConfig) GetTag() interface{} {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *CNIRepairConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CNIRepairConfig) GetLabelPods() bool {
	if m != nil {
		return m.LabelPods
	}
	return false
}

// Deprecated: Do not use.
func (m *CNIRepairConfig) GetCreateEvents() string {
	if m != nil {
		return m.CreateEvents
	}
	return ""
}

func (m *CNIRepairConfig) GetDeletePods() bool {
	if m != nil {
		return m.DeletePods
	}
	return false
}

func (m *CNIRepairConfig) GetBrokenPodLabelKey() string {
	if m != nil {
		return m.BrokenPodLabelKey
	}
	return ""
}

func (m *CNIRepairConfig) GetBrokenPodLabelValue() string {
	if m != nil {
		return m.BrokenPodLabelValue
	}
	return ""
}

func (m *CNIRepairConfig) GetInitContainerName() string {
	if m != nil {
		return m.InitContainerName
	}
	return ""
}

// Configuration for CPU target utilization for HorizontalPodAutoscaler target.
type CPUTargetUtilizationConfig struct {
	// K8s utilization setting for HorizontalPodAutoscaler target.
	//
	// See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
	TargetAverageUtilization int32    `protobuf:"varint,1,opt,name=targetAverageUtilization,proto3" json:"targetAverageUtilization,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *CPUTargetUtilizationConfig) Reset()         { *m = CPUTargetUtilizationConfig{} }
func (m *CPUTargetUtilizationConfig) String() string { return proto.CompactTextString(m) }
func (*CPUTargetUtilizationConfig) ProtoMessage()    {}
func (*CPUTargetUtilizationConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{3}
}
func (m *CPUTargetUtilizationConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPUTargetUtilizationConfig.Unmarshal(m, b)
}
func (m *CPUTargetUtilizationConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPUTargetUtilizationConfig.Marshal(b, m, deterministic)
}
func (m *CPUTargetUtilizationConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPUTargetUtilizationConfig.Merge(m, src)
}
func (m *CPUTargetUtilizationConfig) XXX_Size() int {
	return xxx_messageInfo_CPUTargetUtilizationConfig.Size(m)
}
func (m *CPUTargetUtilizationConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CPUTargetUtilizationConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CPUTargetUtilizationConfig proto.InternalMessageInfo

func (m *CPUTargetUtilizationConfig) GetTargetAverageUtilization() int32 {
	if m != nil {
		return m.TargetAverageUtilization
	}
	return 0
}

// Mirrors Resources for unmarshaling.
type Resources struct {
	Limits               map[string]string `protobuf:"bytes,1,rep,name=limits,proto3" json:"limits,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Requests             map[string]string `protobuf:"bytes,2,rep,name=requests,proto3" json:"requests,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Resources) Reset()         { *m = Resources{} }
func (m *Resources) String() string { return proto.CompactTextString(m) }
func (*Resources) ProtoMessage()    {}
func (*Resources) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{4}
}
func (m *Resources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resources.Unmarshal(m, b)
}
func (m *Resources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resources.Marshal(b, m, deterministic)
}
func (m *Resources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resources.Merge(m, src)
}
func (m *Resources) XXX_Size() int {
	return xxx_messageInfo_Resources.Size(m)
}
func (m *Resources) XXX_DiscardUnknown() {
	xxx_messageInfo_Resources.DiscardUnknown(m)
}

var xxx_messageInfo_Resources proto.InternalMessageInfo

func (m *Resources) GetLimits() map[string]string {
	if m != nil {
		return m.Limits
	}
	return nil
}

func (m *Resources) GetRequests() map[string]string {
	if m != nil {
		return m.Requests
	}
	return nil
}

// Configuration for Core DNS.
type CoreDNSConfig struct {
	// Controls whether CoreDNS is enabled.
	Enabled *protobuf.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Image for Core DNS.
	CoreDNSImage       string `protobuf:"bytes,2,opt,name=coreDNSImage,proto3" json:"coreDNSImage,omitempty"`
	CoreDNSTag         string `protobuf:"bytes,3,opt,name=coreDNSTag,proto3" json:"coreDNSTag,omitempty"`
	CoreDNSPluginImage string `protobuf:"bytes,4,opt,name=coreDNSPluginImage,proto3" json:"coreDNSPluginImage,omitempty"`
	// K8s node selector.
	//
	// See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
	NodeSelector map[string]interface{} `protobuf:"bytes,5,opt,name=nodeSelector,proto3" json:"nodeSelector,omitempty"` // Deprecated: Do not use.
	// Number of replicas for Core DNS.
	ReplicaCount uint32 `protobuf:"varint,6,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"` // Deprecated: Do not use.
	// K8s annotations for pods.
	//
	// See: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
	PodAnnotations map[string]interface{} `protobuf:"bytes,7,opt,name=podAnnotations,proto3" json:"podAnnotations,omitempty"` // Deprecated: Do not use.
	// K8s resources settings.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	Resources *Resources `protobuf:"bytes,8,opt,name=resources,proto3" json:"resources,omitempty"` // Deprecated: Do not use.
	// K8s rolling update strategy
	RollingMaxSurge *IntOrStringForPB `protobuf:"bytes,9,opt,name=rollingMaxSurge,proto3" json:"rollingMaxSurge,omitempty"` // Deprecated: Do not use.
	// K8s rolling update strategy
	RollingMaxUnavailable            *IntOrStringForPB          `protobuf:"bytes,10,opt,name=rollingMaxUnavailable,proto3" json:"rollingMaxUnavailable,omitempty"`                       // Deprecated: Do not use.
	PodAntiAffinityLabelSelector     []map[string]interface{} `protobuf:"bytes,11,opt,name=podAntiAffinityLabelSelector,proto3" json:"podAntiAffinityLabelSelector,omitempty"`         // Deprecated: Do not use.
	PodAntiAffinityTermLabelSelector []map[string]interface{} `protobuf:"bytes,12,opt,name=podAntiAffinityTermLabelSelector,proto3" json:"podAntiAffinityTermLabelSelector,omitempty"` // Deprecated: Do not use.
	Tolerations                      []map[string]interface{} `protobuf:"bytes,13,opt,name=tolerations,proto3" json:"tolerations,omitempty"`                                           // Deprecated: Do not use.
	// Controls whether auto scaling with a HorizontalPodAutoscaler is enabled.
	AutoscaleEnabled *protobuf.BoolValue `protobuf:"bytes,14,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
	// maxReplicas setting for HorizontalPodAutoscaler.
	AutoscaleMax uint32 `protobuf:"varint,15,opt,name=autoscaleMax,proto3" json:"autoscaleMax,omitempty"`
	// minReplicas setting for HorizontalPodAutoscaler.
	AutoscaleMin uint32 `protobuf:"varint,16,opt,name=autoscaleMin,proto3" json:"autoscaleMin,omitempty"`
	// K8s utilization setting for HorizontalPodAutoscaler target.
	//
	// See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
	Cpu                  *CPUTargetUtilizationConfig `protobuf:"bytes,17,opt,name=cpu,proto3" json:"cpu,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CoreDNSConfig) Reset()         { *m = CoreDNSConfig{} }
func (m *CoreDNSConfig) String() string { return proto.CompactTextString(m) }
func (*CoreDNSConfig) ProtoMessage()    {}
func (*CoreDNSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{5}
}
func (m *CoreDNSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoreDNSConfig.Unmarshal(m, b)
}
func (m *CoreDNSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoreDNSConfig.Marshal(b, m, deterministic)
}
func (m *CoreDNSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoreDNSConfig.Merge(m, src)
}
func (m *CoreDNSConfig) XXX_Size() int {
	return xxx_messageInfo_CoreDNSConfig.Size(m)
}
func (m *CoreDNSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CoreDNSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CoreDNSConfig proto.InternalMessageInfo

func (m *CoreDNSConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *CoreDNSConfig) GetCoreDNSImage() string {
	if m != nil {
		return m.CoreDNSImage
	}
	return ""
}

func (m *CoreDNSConfig) GetCoreDNSTag() string {
	if m != nil {
		return m.CoreDNSTag
	}
	return ""
}

func (m *CoreDNSConfig) GetCoreDNSPluginImage() string {
	if m != nil {
		return m.CoreDNSPluginImage
	}
	return ""
}

// Deprecated: Do not use.
func (m *CoreDNSConfig) GetNodeSelector() map[string]interface{} {
	if m != nil {
		return m.NodeSelector
	}
	return nil
}

// Deprecated: Do not use.
func (m *CoreDNSConfig) GetReplicaCount() uint32 {
	if m != nil {
		return m.ReplicaCount
	}
	return 0
}

// Deprecated: Do not use.
func (m *CoreDNSConfig) GetPodAnnotations() map[string]interface{} {
	if m != nil {
		return m.PodAnnotations
	}
	return nil
}

// Deprecated: Do not use.
func (m *CoreDNSConfig) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

// Deprecated: Do not use.
func (m *CoreDNSConfig) GetRollingMaxSurge() *IntOrStringForPB {
	if m != nil {
		return m.RollingMaxSurge
	}
	return nil
}

// Deprecated: Do not use.
func (m *CoreDNSConfig) GetRollingMaxUnavailable() *IntOrStringForPB {
	if m != nil {
		return m.RollingMaxUnavailable
	}
	return nil
}

// Deprecated: Do not use.
func (m *CoreDNSConfig) GetPodAntiAffinityLabelSelector() []map[string]interface{} {
	if m != nil {
		return m.PodAntiAffinityLabelSelector
	}
	return nil
}

// Deprecated: Do not use.
func (m *CoreDNSConfig) GetPodAntiAffinityTermLabelSelector() []map[string]interface{} {
	if m != nil {
		return m.PodAntiAffinityTermLabelSelector
	}
	return nil
}

// Deprecated: Do not use.
func (m *CoreDNSConfig) GetTolerations() []map[string]interface{} {
	if m != nil {
		return m.Tolerations
	}
	return nil
}

func (m *CoreDNSConfig) GetAutoscaleEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.AutoscaleEnabled
	}
	return nil
}

func (m *CoreDNSConfig) GetAutoscaleMax() uint32 {
	if m != nil {
		return m.AutoscaleMax
	}
	return 0
}

func (m *CoreDNSConfig) GetAutoscaleMin() uint32 {
	if m != nil {
		return m.AutoscaleMin
	}
	return 0
}

// Deprecated: Do not use.
func (m *CoreDNSConfig) GetCpu() *CPUTargetUtilizationConfig {
	if m != nil {
		return m.Cpu
	}
	return nil
}

// DefaultPodDisruptionBudgetConfig specifies the default pod disruption budget configuration.
//
// See https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
type DefaultPodDisruptionBudgetConfig struct {
	// Controls whether a PodDisruptionBudget with a default minAvailable value of 1 is created for each deployment.
	Enabled              *protobuf.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DefaultPodDisruptionBudgetConfig) Reset()         { *m = DefaultPodDisruptionBudgetConfig{} }
func (m *DefaultPodDisruptionBudgetConfig) String() string { return proto.CompactTextString(m) }
func (*DefaultPodDisruptionBudgetConfig) ProtoMessage()    {}
func (*DefaultPodDisruptionBudgetConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{6}
}
func (m *DefaultPodDisruptionBudgetConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultPodDisruptionBudgetConfig.Unmarshal(m, b)
}
func (m *DefaultPodDisruptionBudgetConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultPodDisruptionBudgetConfig.Marshal(b, m, deterministic)
}
func (m *DefaultPodDisruptionBudgetConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultPodDisruptionBudgetConfig.Merge(m, src)
}
func (m *DefaultPodDisruptionBudgetConfig) XXX_Size() int {
	return xxx_messageInfo_DefaultPodDisruptionBudgetConfig.Size(m)
}
func (m *DefaultPodDisruptionBudgetConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultPodDisruptionBudgetConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultPodDisruptionBudgetConfig proto.InternalMessageInfo

func (m *DefaultPodDisruptionBudgetConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

// DefaultResourcesConfig specifies the default k8s resources settings for all Istio control plane components.
type DefaultResourcesConfig struct {
	// k8s resources settings.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	Requests             *ResourcesRequestsConfig `protobuf:"bytes,1,opt,name=requests,proto3" json:"requests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DefaultResourcesConfig) Reset()         { *m = DefaultResourcesConfig{} }
func (m *DefaultResourcesConfig) String() string { return proto.CompactTextString(m) }
func (*DefaultResourcesConfig) ProtoMessage()    {}
func (*DefaultResourcesConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{7}
}
func (m *DefaultResourcesConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultResourcesConfig.Unmarshal(m, b)
}
func (m *DefaultResourcesConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultResourcesConfig.Marshal(b, m, deterministic)
}
func (m *DefaultResourcesConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultResourcesConfig.Merge(m, src)
}
func (m *DefaultResourcesConfig) XXX_Size() int {
	return xxx_messageInfo_DefaultResourcesConfig.Size(m)
}
func (m *DefaultResourcesConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultResourcesConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultResourcesConfig proto.InternalMessageInfo

func (m *DefaultResourcesConfig) GetRequests() *ResourcesRequestsConfig {
	if m != nil {
		return m.Requests
	}
	return nil
}

// Configuration for an egress gateway.
type EgressGatewayConfig struct {
	// Controls whether auto scaling with a HorizontalPodAutoscaler is enabled.
	AutoscaleEnabled *protobuf.BoolValue `protobuf:"bytes,1,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
	// maxReplicas setting for HorizontalPodAutoscaler.
	AutoscaleMax uint32 `protobuf:"varint,2,opt,name=autoscaleMax,proto3" json:"autoscaleMax,omitempty"`
	// minReplicas setting for HorizontalPodAutoscaler.
	AutoscaleMin uint32 `protobuf:"varint,3,opt,name=autoscaleMin,proto3" json:"autoscaleMin,omitempty"`
	// K8s utilization setting for HorizontalPodAutoscaler target.
	//
	// See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
	Cpu *CPUTargetUtilizationConfig `protobuf:"bytes,5,opt,name=cpu,proto3" json:"cpu,omitempty"` // Deprecated: Do not use.
	// Controls whether an egress gateway is enabled.
	Enabled *protobuf.BoolValue `protobuf:"bytes,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Environment variables passed to the proxy container.
	Env    map[string]interface{} `protobuf:"bytes,8,opt,name=env,proto3" json:"env,omitempty"`
	Labels *GatewayLabelsConfig    `protobuf:"bytes,9,opt,name=labels,proto3" json:"labels,omitempty"`
	Name   string                  `protobuf:"bytes,25,opt,name=name,proto3" json:"name,omitempty"`
	// K8s node selector.
	//
	// See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
	NodeSelector map[string]interface{} `protobuf:"bytes,10,opt,name=nodeSelector,proto3" json:"nodeSelector,omitempty"` // Deprecated: Do not use.
	// K8s annotations for pods.
	//
	// See: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
	PodAnnotations map[string]interface{} `protobuf:"bytes,11,opt,name=podAnnotations,proto3" json:"podAnnotations,omitempty"` // Deprecated: Do not use.
	// Pod anti-affinity label selector.
	//
	// Specify the pod anti-affinity that allows you to constrain which nodes
	// your pod is eligible to be scheduled based on labels on pods that are
	// already running on the node rather than based on labels on nodes.
	// There are currently two types of anti-affinity:
	//    "requiredDuringSchedulingIgnoredDuringExecution"
	//    "preferredDuringSchedulingIgnoredDuringExecution"
	// which denote “hard” vs. “soft” requirements, you can define your values
	// in "podAntiAffinityLabelSelector" and "podAntiAffinityTermLabelSelector"
	// correspondingly.
	// See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
	//
	// Examples:
	// podAntiAffinityLabelSelector:
	//  - key: security
	//    operator: In
	//    values: S1,S2
	//    topologyKey: "kubernetes.io/hostname"
	//  This pod anti-affinity rule says that the pod requires not to be scheduled
	//  onto a node if that node is already running a pod with label having key
	//  “security” and value “S1”.
	PodAntiAffinityLabelSelector []map[string]interface{} `protobuf:"bytes,12,opt,name=podAntiAffinityLabelSelector,proto3" json:"podAntiAffinityLabelSelector,omitempty"` // Deprecated: Do not use.
	// See PodAntiAffinityLabelSelector.
	PodAntiAffinityTermLabelSelector []map[string]interface{} `protobuf:"bytes,13,opt,name=podAntiAffinityTermLabelSelector,proto3" json:"podAntiAffinityTermLabelSelector,omitempty"` // Deprecated: Do not use.
	// Ports Configuration for the egress gateway service.
	Ports []*PortsConfig `protobuf:"bytes,14,rep,name=ports,proto3" json:"ports,omitempty"`
	// K8s resources settings.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	Resources *Resources `protobuf:"bytes,15,opt,name=resources,proto3" json:"resources,omitempty"` // Deprecated: Do not use.
	// Config for secret volume mounts.
	SecretVolumes []*SecretVolume `protobuf:"bytes,16,rep,name=secretVolumes,proto3" json:"secretVolumes,omitempty"`
	// Annotations to add to the egress gateway service.
	ServiceAnnotations map[string]interface{} `protobuf:"bytes,17,opt,name=serviceAnnotations,proto3" json:"serviceAnnotations,omitempty"`
	// Service type.
	//
	// See https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
	Type string `protobuf:"bytes,18,opt,name=type,proto3" json:"type,omitempty"`
	// Enables cross-cluster access using SNI matching.
	Zvpn        *ZeroVPNConfig                 `protobuf:"bytes,19,opt,name=zvpn,proto3" json:"zvpn,omitempty"`
	Tolerations []map[string]interface{} `protobuf:"bytes,20,opt,name=tolerations,proto3" json:"tolerations,omitempty"` // Deprecated: Do not use.
	// K8s rolling update strategy
	RollingMaxSurge *IntOrStringForPB `protobuf:"bytes,21,opt,name=rollingMaxSurge,proto3" json:"rollingMaxSurge,omitempty"` // Deprecated: Do not use.
	// K8s rolling update strategy
	RollingMaxUnavailable *IntOrStringForPB          `protobuf:"bytes,22,opt,name=rollingMaxUnavailable,proto3" json:"rollingMaxUnavailable,omitempty"` // Deprecated: Do not use.
	ConfigVolumes         []map[string]interface{} `protobuf:"bytes,23,opt,name=configVolumes,proto3" json:"configVolumes,omitempty"`
	AdditionalContainers  []map[string]interface{} `protobuf:"bytes,24,opt,name=additionalContainers,proto3" json:"additionalContainers,omitempty"`
	RunAsRoot             *protobuf.BoolValue            `protobuf:"bytes,26,opt,name=runAsRoot,proto3" json:"runAsRoot,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                       `json:"-"`
	XXX_unrecognized      []byte                         `json:"-"`
	XXX_sizecache         int32                          `json:"-"`
}

func (m *EgressGatewayConfig) Reset()         { *m = EgressGatewayConfig{} }
func (m *EgressGatewayConfig) String() string { return proto.CompactTextString(m) }
func (*EgressGatewayConfig) ProtoMessage()    {}
func (*EgressGatewayConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{8}
}
func (m *EgressGatewayConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EgressGatewayConfig.Unmarshal(m, b)
}
func (m *EgressGatewayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EgressGatewayConfig.Marshal(b, m, deterministic)
}
func (m *EgressGatewayConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EgressGatewayConfig.Merge(m, src)
}
func (m *EgressGatewayConfig) XXX_Size() int {
	return xxx_messageInfo_EgressGatewayConfig.Size(m)
}
func (m *EgressGatewayConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EgressGatewayConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EgressGatewayConfig proto.InternalMessageInfo

func (m *EgressGatewayConfig) GetAutoscaleEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.AutoscaleEnabled
	}
	return nil
}

func (m *EgressGatewayConfig) GetAutoscaleMax() uint32 {
	if m != nil {
		return m.AutoscaleMax
	}
	return 0
}

func (m *EgressGatewayConfig) GetAutoscaleMin() uint32 {
	if m != nil {
		return m.AutoscaleMin
	}
	return 0
}

// Deprecated: Do not use.
func (m *EgressGatewayConfig) GetCpu() *CPUTargetUtilizationConfig {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *EgressGatewayConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *EgressGatewayConfig) GetEnv() map[string]interface{} {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *EgressGatewayConfig) GetLabels() *GatewayLabelsConfig {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *EgressGatewayConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Deprecated: Do not use.
func (m *EgressGatewayConfig) GetNodeSelector() map[string]interface{} {
	if m != nil {
		return m.NodeSelector
	}
	return nil
}

// Deprecated: Do not use.
func (m *EgressGatewayConfig) GetPodAnnotations() map[string]interface{} {
	if m != nil {
		return m.PodAnnotations
	}
	return nil
}

// Deprecated: Do not use.
func (m *EgressGatewayConfig) GetPodAntiAffinityLabelSelector() []map[string]interface{} {
	if m != nil {
		return m.PodAntiAffinityLabelSelector
	}
	return nil
}

// Deprecated: Do not use.
func (m *EgressGatewayConfig) GetPodAntiAffinityTermLabelSelector() []map[string]interface{} {
	if m != nil {
		return m.PodAntiAffinityTermLabelSelector
	}
	return nil
}

func (m *EgressGatewayConfig) GetPorts() []*PortsConfig {
	if m != nil {
		return m.Ports
	}
	return nil
}

// Deprecated: Do not use.
func (m *EgressGatewayConfig) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *EgressGatewayConfig) GetSecretVolumes() []*SecretVolume {
	if m != nil {
		return m.SecretVolumes
	}
	return nil
}

func (m *EgressGatewayConfig) GetServiceAnnotations() map[string]interface{} {
	if m != nil {
		return m.ServiceAnnotations
	}
	return nil
}

func (m *EgressGatewayConfig) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *EgressGatewayConfig) GetZvpn() *ZeroVPNConfig {
	if m != nil {
		return m.Zvpn
	}
	return nil
}

// Deprecated: Do not use.
func (m *EgressGatewayConfig) GetTolerations() []map[string]interface{} {
	if m != nil {
		return m.Tolerations
	}
	return nil
}

// Deprecated: Do not use.
func (m *EgressGatewayConfig) GetRollingMaxSurge() *IntOrStringForPB {
	if m != nil {
		return m.RollingMaxSurge
	}
	return nil
}

// Deprecated: Do not use.
func (m *EgressGatewayConfig) GetRollingMaxUnavailable() *IntOrStringForPB {
	if m != nil {
		return m.RollingMaxUnavailable
	}
	return nil
}

func (m *EgressGatewayConfig) GetConfigVolumes() []map[string]interface{} {
	if m != nil {
		return m.ConfigVolumes
	}
	return nil
}

func (m *EgressGatewayConfig) GetAdditionalContainers() []map[string]interface{} {
	if m != nil {
		return m.AdditionalContainers
	}
	return nil
}

func (m *EgressGatewayConfig) GetRunAsRoot() *protobuf.BoolValue {
	if m != nil {
		return m.RunAsRoot
	}
	return nil
}

// GatewayLabelsConfig is a set of Configuration for gateway labels.
type GatewayLabelsConfig struct {
	App                  string   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Istio                string   `protobuf:"bytes,2,opt,name=istio,proto3" json:"istio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewayLabelsConfig) Reset()         { *m = GatewayLabelsConfig{} }
func (m *GatewayLabelsConfig) String() string { return proto.CompactTextString(m) }
func (*GatewayLabelsConfig) ProtoMessage()    {}
func (*GatewayLabelsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{9}
}
func (m *GatewayLabelsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayLabelsConfig.Unmarshal(m, b)
}
func (m *GatewayLabelsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayLabelsConfig.Marshal(b, m, deterministic)
}
func (m *GatewayLabelsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayLabelsConfig.Merge(m, src)
}
func (m *GatewayLabelsConfig) XXX_Size() int {
	return xxx_messageInfo_GatewayLabelsConfig.Size(m)
}
func (m *GatewayLabelsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayLabelsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayLabelsConfig proto.InternalMessageInfo

func (m *GatewayLabelsConfig) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *GatewayLabelsConfig) GetIstio() string {
	if m != nil {
		return m.Istio
	}
	return ""
}

// Configuration for gateways.
type GatewaysConfig struct {
	// Configuration for an egress gateway.
	IstioEgressgateway *EgressGatewayConfig `protobuf:"bytes,1,opt,name=istio_egressgateway,json=istio-egressgateway,proto3" json:"istio_egressgateway,omitempty"`
	// Controls whether any gateways are enabled.
	Enabled *protobuf.BoolValue `protobuf:"bytes,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Configuration for an ingress gateway.
	IstioIngressgateway  *IngressGatewayConfig `protobuf:"bytes,4,opt,name=istio_ingressgateway,json=istio-ingressgateway,proto3" json:"istio_ingressgateway,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GatewaysConfig) Reset()         { *m = GatewaysConfig{} }
func (m *GatewaysConfig) String() string { return proto.CompactTextString(m) }
func (*GatewaysConfig) ProtoMessage()    {}
func (*GatewaysConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{10}
}
func (m *GatewaysConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewaysConfig.Unmarshal(m, b)
}
func (m *GatewaysConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewaysConfig.Marshal(b, m, deterministic)
}
func (m *GatewaysConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewaysConfig.Merge(m, src)
}
func (m *GatewaysConfig) XXX_Size() int {
	return xxx_messageInfo_GatewaysConfig.Size(m)
}
func (m *GatewaysConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewaysConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GatewaysConfig proto.InternalMessageInfo

func (m *GatewaysConfig) GetIstioEgressgateway() *EgressGatewayConfig {
	if m != nil {
		return m.IstioEgressgateway
	}
	return nil
}

func (m *GatewaysConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *GatewaysConfig) GetIstioIngressgateway() *IngressGatewayConfig {
	if m != nil {
		return m.IstioIngressgateway
	}
	return nil
}

// Global Configuration for Istio components.
type GlobalConfig struct {
	// Specifies pod scheduling arch(amd64, ppc64le, s390x) and weight as follows:
	//   0 - Never scheduled
	//   1 - Least preferred
	//   2 - No preference
	//   3 - Most preferred
	Arch                *ArchConfig `protobuf:"bytes,1,opt,name=arch,proto3" json:"arch,omitempty"`
	ConfigRootNamespace string      `protobuf:"bytes,50,opt,name=configRootNamespace,proto3" json:"configRootNamespace,omitempty"`
	// Controls whether the server-side validation is enabled.
	ConfigValidation                *protobuf.BoolValue `protobuf:"bytes,3,opt,name=configValidation,proto3" json:"configValidation,omitempty"`
	DefaultConfigVisibilitySettings []string            `protobuf:"bytes,52,rep,name=defaultConfigVisibilitySettings,proto3" json:"defaultConfigVisibilitySettings,omitempty"`
	// Default k8s node selector for all the Istio control plane components
	//
	// See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
	DefaultNodeSelector map[string]interface{} `protobuf:"bytes,6,opt,name=defaultNodeSelector,proto3" json:"defaultNodeSelector,omitempty"` // Deprecated: Do not use.
	// Specifies the default pod disruption budget configuration.
	DefaultPodDisruptionBudget *DefaultPodDisruptionBudgetConfig `protobuf:"bytes,7,opt,name=defaultPodDisruptionBudget,proto3" json:"defaultPodDisruptionBudget,omitempty"` // Deprecated: Do not use.
	// Default k8s resources settings for all Istio control plane components.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	DefaultResources   *DefaultResourcesConfig        `protobuf:"bytes,9,opt,name=defaultResources,proto3" json:"defaultResources,omitempty"`      // Deprecated: Do not use.
	DefaultTolerations []map[string]interface{} `protobuf:"bytes,55,opt,name=defaultTolerations,proto3" json:"defaultTolerations,omitempty"` // Deprecated: Do not use.
	// Specifies the docker hub for Istio images.
	Hub string `protobuf:"bytes,12,opt,name=hub,proto3" json:"hub,omitempty"`
	// Specifies the image pull policy for the Istio images. one of Always, Never, IfNotPresent.
	// Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.
	//
	// More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
	ImagePullPolicy  string   `protobuf:"bytes,13,opt,name=imagePullPolicy,proto3" json:"imagePullPolicy,omitempty"`
	ImagePullSecrets []string `protobuf:"bytes,37,rep,name=imagePullSecrets,proto3" json:"imagePullSecrets,omitempty"`
	// Specifies the default namespace for the Istio control plane components.
	IstioNamespace string              `protobuf:"bytes,14,opt,name=istioNamespace,proto3" json:"istioNamespace,omitempty"`
	LogAsJson      *protobuf.BoolValue `protobuf:"bytes,36,opt,name=logAsJson,proto3" json:"logAsJson,omitempty"`
	// Specifies the global logging level settings for the Istio control plane components.
	Logging *GlobalLoggingConfig `protobuf:"bytes,17,opt,name=logging,proto3" json:"logging,omitempty"`
	// Specifies the Configuration for Istio mesh expansion to bare metal.
	MeshExpansion *MeshExpansionConfig `protobuf:"bytes,18,opt,name=meshExpansion,proto3" json:"meshExpansion,omitempty"`
	MeshID        string               `protobuf:"bytes,53,opt,name=meshID,proto3" json:"meshID,omitempty"`
	// Configure the mesh networks to be used by the Split Horizon EDS.
	//
	// The following example defines two networks with different endpoints association methods.
	// For `network1` all endpoints that their IP belongs to the provided CIDR range will be
	// mapped to network1. The gateway for this network example is specified by its public IP
	// address and port.
	// The second network, `network2`, in this example is defined differently with all endpoints
	// retrieved through the specified Multi-Cluster registry being mapped to network2. The
	// gateway is also defined differently with the name of the gateway service on the remote
	// cluster. The public IP for the gateway will be determined from that remote service (only
	// LoadBalancer gateway service type is currently supported, for a NodePort type gateway service,
	// it still need to be configured manually).
	//
	// meshNetworks:
	//   network1:
	//     endpoints:
	//     - fromCidr: "192.168.0.1/24"
	//     gateways:
	//     - address: 1.1.1.1
	//       port: 80
	//   network2:
	//     endpoints:
	//     - fromRegistry: reg1
	//     gateways:
	//     - registryServiceName: istio-ingressgateway.istio-system.svc.cluster.local
	//       port: 443
	//
	MeshNetworks map[string]interface{} `protobuf:"bytes,19,opt,name=meshNetworks,proto3" json:"meshNetworks,omitempty"`
	// Specifies the Configuration for Istio mesh across multiple clusters through Istio gateways.
	MultiCluster *MultiClusterConfig `protobuf:"bytes,22,opt,name=multiCluster,proto3" json:"multiCluster,omitempty"`
	Network      string              `protobuf:"bytes,39,opt,name=network,proto3" json:"network,omitempty"`
	// Custom DNS config for the pod to resolve names of services in other
	// clusters. Use this to add additional search domains, and other settings.
	// see https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#dns-config
	// This does not apply to gateway pods as they typically need a different
	// set of DNS settings than the normal application pods (e.g. in multicluster scenarios).
	PodDNSSearchNamespaces       []string            `protobuf:"bytes,43,rep,name=podDNSSearchNamespaces,proto3" json:"podDNSSearchNamespaces,omitempty"`
	OmitSidecarInjectorConfigMap *protobuf.BoolValue `protobuf:"bytes,38,opt,name=omitSidecarInjectorConfigMap,proto3" json:"omitSidecarInjectorConfigMap,omitempty"`
	// Controls whether to restrict the applications namespace the controller manages;
	// If set it to false, the controller watches all namespaces.
	OneNamespace           *protobuf.BoolValue `protobuf:"bytes,23,opt,name=oneNamespace,proto3" json:"oneNamespace,omitempty"`
	OperatorManageWebhooks *protobuf.BoolValue `protobuf:"bytes,41,opt,name=operatorManageWebhooks,proto3" json:"operatorManageWebhooks,omitempty"`
	// Specifies the k8s priorityClassName for the istio control plane components.
	//
	// See https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
	PriorityClassName string `protobuf:"bytes,27,opt,name=priorityClassName,proto3" json:"priorityClassName,omitempty"` // Deprecated: Do not use.
	// Specifies how proxies are configured within Istio.
	Proxy *ProxyConfig `protobuf:"bytes,28,opt,name=proxy,proto3" json:"proxy,omitempty"`
	// Specifies the Configuration for proxy_init container which sets the pods' networking to intercept the inbound/outbound traffic.
	ProxyInit *ProxyInitConfig `protobuf:"bytes,29,opt,name=proxy_init,proto3" json:"proxy_init,omitempty"`
	// Specifies the Configuration for the SecretDiscoveryService instead of using K8S secrets to mount the certificates.
	Sds *SDSConfig `protobuf:"bytes,30,opt,name=sds,proto3" json:"sds,omitempty"`
	// Specifies the tag for the Istio docker images.
	Tag interface{} `protobuf:"bytes,31,opt,name=tag,proto3" json:"tag,omitempty"`
	// Specifies the Configuration for each of the supported tracers.
	Tracer *TracerConfig `protobuf:"bytes,33,opt,name=tracer,proto3" json:"tracer,omitempty"`
	// Specifies the trust domain that corresponds to the root cert of CA.
	TrustDomain string `protobuf:"bytes,34,opt,name=trustDomain,proto3" json:"trustDomain,omitempty"`
	// Controls whether to use of Mesh Configuration Protocol to distribute configuration.
	UseMCP *protobuf.BoolValue `protobuf:"bytes,35,opt,name=useMCP,proto3" json:"useMCP,omitempty"`
	// Specifies the Istio control plane’s pilot Pod IP address or remote cluster DNS resolvable hostname.
	RemotePilotAddress string `protobuf:"bytes,48,opt,name=remotePilotAddress,proto3" json:"remotePilotAddress,omitempty"`
	// Specifies the configution of istiod
	Istiod *IstiodConfig `protobuf:"bytes,54,opt,name=istiod,proto3" json:"istiod,omitempty"`
	// Configure the Pilot certificate provider.
	// Currently, two providers are supported: "kubernetes" and "citadel".
	PilotCertProvider string `protobuf:"bytes,56,opt,name=pilotCertProvider,proto3" json:"pilotCertProvider,omitempty"`
	// Configure the policy for validating JWT.
	// Currently, two options are supported: "third-party-jwt" and "first-party-jwt".
	JwtPolicy string `protobuf:"bytes,57,opt,name=jwtPolicy,proto3" json:"jwtPolicy,omitempty"`
	// Specifies the configuration for Security Token Service.
	Sts *STSConfig `protobuf:"bytes,58,opt,name=sts,proto3" json:"sts,omitempty"`
	// Configures the revision this control plane is a part of
	Revision string `protobuf:"bytes,59,opt,name=revision,proto3" json:"revision,omitempty"`
	// Controls whether the in-cluster MTLS key and certs are loaded from the secret volume mounts.
	MountMtlsCerts *protobuf.BoolValue `protobuf:"bytes,60,opt,name=mountMtlsCerts,proto3" json:"mountMtlsCerts,omitempty"`
	// The address of the CA for CSR.
	CaAddress string `protobuf:"bytes,61,opt,name=caAddress,proto3" json:"caAddress,omitempty"`
	// Controls whether one central istiod is enabled.
	CentralIstiod        *protobuf.BoolValue `protobuf:"bytes,62,opt,name=centralIstiod,proto3" json:"centralIstiod,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GlobalConfig) Reset()         { *m = GlobalConfig{} }
func (m *GlobalConfig) String() string { return proto.CompactTextString(m) }
func (*GlobalConfig) ProtoMessage()    {}
func (*GlobalConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{11}
}
func (m *GlobalConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalConfig.Unmarshal(m, b)
}
func (m *GlobalConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalConfig.Marshal(b, m, deterministic)
}
func (m *GlobalConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalConfig.Merge(m, src)
}
func (m *GlobalConfig) XXX_Size() int {
	return xxx_messageInfo_GlobalConfig.Size(m)
}
func (m *GlobalConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalConfig proto.InternalMessageInfo

func (m *GlobalConfig) GetArch() *ArchConfig {
	if m != nil {
		return m.Arch
	}
	return nil
}

func (m *GlobalConfig) GetConfigRootNamespace() string {
	if m != nil {
		return m.ConfigRootNamespace
	}
	return ""
}

func (m *GlobalConfig) GetConfigValidation() *protobuf.BoolValue {
	if m != nil {
		return m.ConfigValidation
	}
	return nil
}

func (m *GlobalConfig) GetDefaultConfigVisibilitySettings() []string {
	if m != nil {
		return m.DefaultConfigVisibilitySettings
	}
	return nil
}

// Deprecated: Do not use.
func (m *GlobalConfig) GetDefaultNodeSelector() map[string]interface{} {
	if m != nil {
		return m.DefaultNodeSelector
	}
	return nil
}

// Deprecated: Do not use.
func (m *GlobalConfig) GetDefaultPodDisruptionBudget() *DefaultPodDisruptionBudgetConfig {
	if m != nil {
		return m.DefaultPodDisruptionBudget
	}
	return nil
}

// Deprecated: Do not use.
func (m *GlobalConfig) GetDefaultResources() *DefaultResourcesConfig {
	if m != nil {
		return m.DefaultResources
	}
	return nil
}

// Deprecated: Do not use.
func (m *GlobalConfig) GetDefaultTolerations() []map[string]interface{} {
	if m != nil {
		return m.DefaultTolerations
	}
	return nil
}

func (m *GlobalConfig) GetHub() string {
	if m != nil {
		return m.Hub
	}
	return ""
}

func (m *GlobalConfig) GetImagePullPolicy() string {
	if m != nil {
		return m.ImagePullPolicy
	}
	return ""
}

func (m *GlobalConfig) GetImagePullSecrets() []string {
	if m != nil {
		return m.ImagePullSecrets
	}
	return nil
}

func (m *GlobalConfig) GetIstioNamespace() string {
	if m != nil {
		return m.IstioNamespace
	}
	return ""
}

func (m *GlobalConfig) GetLogAsJson() *protobuf.BoolValue {
	if m != nil {
		return m.LogAsJson
	}
	return nil
}

func (m *GlobalConfig) GetLogging() *GlobalLoggingConfig {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *GlobalConfig) GetMeshExpansion() *MeshExpansionConfig {
	if m != nil {
		return m.MeshExpansion
	}
	return nil
}

func (m *GlobalConfig) GetMeshID() string {
	if m != nil {
		return m.MeshID
	}
	return ""
}

func (m *GlobalConfig) GetMeshNetworks() map[string]interface{} {
	if m != nil {
		return m.MeshNetworks
	}
	return nil
}

func (m *GlobalConfig) GetMultiCluster() *MultiClusterConfig {
	if m != nil {
		return m.MultiCluster
	}
	return nil
}

func (m *GlobalConfig) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *GlobalConfig) GetPodDNSSearchNamespaces() []string {
	if m != nil {
		return m.PodDNSSearchNamespaces
	}
	return nil
}

func (m *GlobalConfig) GetOmitSidecarInjectorConfigMap() *protobuf.BoolValue {
	if m != nil {
		return m.OmitSidecarInjectorConfigMap
	}
	return nil
}

func (m *GlobalConfig) GetOneNamespace() *protobuf.BoolValue {
	if m != nil {
		return m.OneNamespace
	}
	return nil
}

func (m *GlobalConfig) GetOperatorManageWebhooks() *protobuf.BoolValue {
	if m != nil {
		return m.OperatorManageWebhooks
	}
	return nil
}

// Deprecated: Do not use.
func (m *GlobalConfig) GetPriorityClassName() string {
	if m != nil {
		return m.PriorityClassName
	}
	return ""
}

func (m *GlobalConfig) GetProxy() *ProxyConfig {
	if m != nil {
		return m.Proxy
	}
	return nil
}

func (m *GlobalConfig) GetProxyInit() *ProxyInitConfig {
	if m != nil {
		return m.ProxyInit
	}
	return nil
}

func (m *GlobalConfig) GetSds() *SDSConfig {
	if m != nil {
		return m.Sds
	}
	return nil
}

func (m *GlobalConfig) GetTag() interface{} {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *GlobalConfig) GetTracer() *TracerConfig {
	if m != nil {
		return m.Tracer
	}
	return nil
}

func (m *GlobalConfig) GetTrustDomain() string {
	if m != nil {
		return m.TrustDomain
	}
	return ""
}

func (m *GlobalConfig) GetUseMCP() *protobuf.BoolValue {
	if m != nil {
		return m.UseMCP
	}
	return nil
}

func (m *GlobalConfig) GetRemotePilotAddress() string {
	if m != nil {
		return m.RemotePilotAddress
	}
	return ""
}

func (m *GlobalConfig) GetIstiod() *IstiodConfig {
	if m != nil {
		return m.Istiod
	}
	return nil
}

func (m *GlobalConfig) GetPilotCertProvider() string {
	if m != nil {
		return m.PilotCertProvider
	}
	return ""
}

func (m *GlobalConfig) GetJwtPolicy() string {
	if m != nil {
		return m.JwtPolicy
	}
	return ""
}

func (m *GlobalConfig) GetSts() *STSConfig {
	if m != nil {
		return m.Sts
	}
	return nil
}

func (m *GlobalConfig) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

func (m *GlobalConfig) GetMountMtlsCerts() *protobuf.BoolValue {
	if m != nil {
		return m.MountMtlsCerts
	}
	return nil
}

func (m *GlobalConfig) GetCaAddress() string {
	if m != nil {
		return m.CaAddress
	}
	return ""
}

func (m *GlobalConfig) GetCentralIstiod() *protobuf.BoolValue {
	if m != nil {
		return m.CentralIstiod
	}
	return nil
}

// Configuration for Security Token Service (STS) server.
//
// See https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-16
type STSConfig struct {
	ServicePort          uint32   `protobuf:"varint,1,opt,name=servicePort,proto3" json:"servicePort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *STSConfig) Reset()         { *m = STSConfig{} }
func (m *STSConfig) String() string { return proto.CompactTextString(m) }
func (*STSConfig) ProtoMessage()    {}
func (*STSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{12}
}
func (m *STSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_STSConfig.Unmarshal(m, b)
}
func (m *STSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_STSConfig.Marshal(b, m, deterministic)
}
func (m *STSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_STSConfig.Merge(m, src)
}
func (m *STSConfig) XXX_Size() int {
	return xxx_messageInfo_STSConfig.Size(m)
}
func (m *STSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_STSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_STSConfig proto.InternalMessageInfo

func (m *STSConfig) GetServicePort() uint32 {
	if m != nil {
		return m.ServicePort
	}
	return 0
}

type IstiodConfig struct {
	// If enabled, istiod will perform config analysis
	EnableAnalysis       *protobuf.BoolValue `protobuf:"bytes,2,opt,name=enableAnalysis,proto3" json:"enableAnalysis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *IstiodConfig) Reset()         { *m = IstiodConfig{} }
func (m *IstiodConfig) String() string { return proto.CompactTextString(m) }
func (*IstiodConfig) ProtoMessage()    {}
func (*IstiodConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{13}
}
func (m *IstiodConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IstiodConfig.Unmarshal(m, b)
}
func (m *IstiodConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IstiodConfig.Marshal(b, m, deterministic)
}
func (m *IstiodConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IstiodConfig.Merge(m, src)
}
func (m *IstiodConfig) XXX_Size() int {
	return xxx_messageInfo_IstiodConfig.Size(m)
}
func (m *IstiodConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_IstiodConfig.DiscardUnknown(m)
}

var xxx_messageInfo_IstiodConfig proto.InternalMessageInfo

func (m *IstiodConfig) GetEnableAnalysis() *protobuf.BoolValue {
	if m != nil {
		return m.EnableAnalysis
	}
	return nil
}

// GlobalLoggingConfig specifies the global logging level settings for the Istio control plane components.
type GlobalLoggingConfig struct {
	// Comma-separated minimum per-scope logging level of messages to output, in the form of <scope>:<level>,<scope>:<level>
	// The control plane has different scopes depending on component, but can configure default log level across all components
	// If empty, default scope and level will be used as configured in code
	Level                string   `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GlobalLoggingConfig) Reset()         { *m = GlobalLoggingConfig{} }
func (m *GlobalLoggingConfig) String() string { return proto.CompactTextString(m) }
func (*GlobalLoggingConfig) ProtoMessage()    {}
func (*GlobalLoggingConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{14}
}
func (m *GlobalLoggingConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalLoggingConfig.Unmarshal(m, b)
}
func (m *GlobalLoggingConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalLoggingConfig.Marshal(b, m, deterministic)
}
func (m *GlobalLoggingConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalLoggingConfig.Merge(m, src)
}
func (m *GlobalLoggingConfig) XXX_Size() int {
	return xxx_messageInfo_GlobalLoggingConfig.Size(m)
}
func (m *GlobalLoggingConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalLoggingConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalLoggingConfig proto.InternalMessageInfo

func (m *GlobalLoggingConfig) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

// Configuration for an ingress gateway.
type IngressGatewayConfig struct {
	// Controls whether auto scaling with a HorizontalPodAutoscaler is enabled.
	AutoscaleEnabled *protobuf.BoolValue `protobuf:"bytes,1,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
	// maxReplicas setting for HorizontalPodAutoscaler.
	AutoscaleMax uint32 `protobuf:"varint,2,opt,name=autoscaleMax,proto3" json:"autoscaleMax,omitempty"`
	// minReplicas setting for HorizontalPodAutoscaler.
	AutoscaleMin uint32 `protobuf:"varint,3,opt,name=autoscaleMin,proto3" json:"autoscaleMin,omitempty"`
	// K8s utilization setting for HorizontalPodAutoscaler target.
	//
	// See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
	Cpu           *CPUTargetUtilizationConfig `protobuf:"bytes,5,opt,name=cpu,proto3" json:"cpu,omitempty"` // Deprecated: Do not use.
	CustomService *protobuf.BoolValue         `protobuf:"bytes,6,opt,name=customService,proto3" json:"customService,omitempty"`
	// Controls whether an ingress gateway is enabled.
	Enabled *protobuf.BoolValue `protobuf:"bytes,10,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Environment variables passed to the proxy container.
	Env                      map[string]interface{} `protobuf:"bytes,11,opt,name=env,proto3" json:"env,omitempty"`
	Labels                   *GatewayLabelsConfig    `protobuf:"bytes,15,opt,name=labels,proto3" json:"labels,omitempty"`
	LoadBalancerIP           string                  `protobuf:"bytes,16,opt,name=loadBalancerIP,proto3" json:"loadBalancerIP,omitempty"`
	LoadBalancerSourceRanges []string                `protobuf:"bytes,17,rep,name=loadBalancerSourceRanges,proto3" json:"loadBalancerSourceRanges,omitempty"`
	MeshExpansionPorts       []*PortsConfig          `protobuf:"bytes,18,rep,name=meshExpansionPorts,proto3" json:"meshExpansionPorts,omitempty"`
	Name                     string                  `protobuf:"bytes,44,opt,name=name,proto3" json:"name,omitempty"`
	// K8s node selector.
	//
	// See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
	NodeSelector map[string]interface{} `protobuf:"bytes,19,opt,name=nodeSelector,proto3" json:"nodeSelector,omitempty"` // Deprecated: Do not use.
	// K8s annotations for pods.
	//
	// See: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
	PodAnnotations map[string]interface{} `protobuf:"bytes,20,opt,name=podAnnotations,proto3" json:"podAnnotations,omitempty"` // Deprecated: Do not use.
	// See EgressGatewayConfig.
	PodAntiAffinityLabelSelector []map[string]interface{} `protobuf:"bytes,21,opt,name=podAntiAffinityLabelSelector,proto3" json:"podAntiAffinityLabelSelector,omitempty"` // Deprecated: Do not use.
	// See EgressGatewayConfig.
	PodAntiAffinityTermLabelSelector []map[string]interface{} `protobuf:"bytes,22,opt,name=podAntiAffinityTermLabelSelector,proto3" json:"podAntiAffinityTermLabelSelector,omitempty"` // Deprecated: Do not use.
	// Port Configuration for the ingress gateway.
	Ports []*PortsConfig `protobuf:"bytes,23,rep,name=ports,proto3" json:"ports,omitempty"`
	// Number of replicas for the ingress gateway Deployment.
	ReplicaCount uint32 `protobuf:"varint,24,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"` // Deprecated: Do not use.
	// K8s resources settings.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	Resources map[string]interface{} `protobuf:"bytes,25,opt,name=resources,proto3" json:"resources,omitempty"` // Deprecated: Do not use.
	// Config for secret volume mounts.
	SecretVolumes []*SecretVolume `protobuf:"bytes,27,rep,name=secretVolumes,proto3" json:"secretVolumes,omitempty"`
	// Annotations to add to the egress gateway service.
	ServiceAnnotations map[string]interface{} `protobuf:"bytes,28,opt,name=serviceAnnotations,proto3" json:"serviceAnnotations,omitempty"`
	// Service type.
	//
	// See https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
	Type string `protobuf:"bytes,29,opt,name=type,proto3" json:"type,omitempty"`
	// Enables cross-cluster access using SNI matching.
	Zvpn *IngressGatewayZvpnConfig `protobuf:"bytes,30,opt,name=zvpn,proto3" json:"zvpn,omitempty"`
	// K8s rolling update strategy
	RollingMaxSurge *IntOrStringForPB `protobuf:"bytes,31,opt,name=rollingMaxSurge,proto3" json:"rollingMaxSurge,omitempty"` // Deprecated: Do not use.
	// K8s rolling update strategy
	RollingMaxUnavailable *IntOrStringForPB          `protobuf:"bytes,32,opt,name=rollingMaxUnavailable,proto3" json:"rollingMaxUnavailable,omitempty"` // Deprecated: Do not use.
	ExternalTrafficPolicy string                         `protobuf:"bytes,34,opt,name=externalTrafficPolicy,proto3" json:"externalTrafficPolicy,omitempty"`
	Tolerations           []map[string]interface{} `protobuf:"bytes,35,opt,name=tolerations,proto3" json:"tolerations,omitempty"` // Deprecated: Do not use.
	IngressPorts          []map[string]interface{} `protobuf:"bytes,36,opt,name=ingressPorts,proto3" json:"ingressPorts,omitempty"`
	AdditionalContainers  []map[string]interface{} `protobuf:"bytes,37,opt,name=additionalContainers,proto3" json:"additionalContainers,omitempty"`
	ConfigVolumes         []map[string]interface{} `protobuf:"bytes,38,opt,name=configVolumes,proto3" json:"configVolumes,omitempty"`
	RunAsRoot             *protobuf.BoolValue            `protobuf:"bytes,45,opt,name=runAsRoot,proto3" json:"runAsRoot,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                       `json:"-"`
	XXX_unrecognized      []byte                         `json:"-"`
	XXX_sizecache         int32                          `json:"-"`
}

func (m *IngressGatewayConfig) Reset()         { *m = IngressGatewayConfig{} }
func (m *IngressGatewayConfig) String() string { return proto.CompactTextString(m) }
func (*IngressGatewayConfig) ProtoMessage()    {}
func (*IngressGatewayConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{15}
}
func (m *IngressGatewayConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IngressGatewayConfig.Unmarshal(m, b)
}
func (m *IngressGatewayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IngressGatewayConfig.Marshal(b, m, deterministic)
}
func (m *IngressGatewayConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IngressGatewayConfig.Merge(m, src)
}
func (m *IngressGatewayConfig) XXX_Size() int {
	return xxx_messageInfo_IngressGatewayConfig.Size(m)
}
func (m *IngressGatewayConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_IngressGatewayConfig.DiscardUnknown(m)
}

var xxx_messageInfo_IngressGatewayConfig proto.InternalMessageInfo

func (m *IngressGatewayConfig) GetAutoscaleEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.AutoscaleEnabled
	}
	return nil
}

func (m *IngressGatewayConfig) GetAutoscaleMax() uint32 {
	if m != nil {
		return m.AutoscaleMax
	}
	return 0
}

func (m *IngressGatewayConfig) GetAutoscaleMin() uint32 {
	if m != nil {
		return m.AutoscaleMin
	}
	return 0
}

// Deprecated: Do not use.
func (m *IngressGatewayConfig) GetCpu() *CPUTargetUtilizationConfig {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *IngressGatewayConfig) GetCustomService() *protobuf.BoolValue {
	if m != nil {
		return m.CustomService
	}
	return nil
}

func (m *IngressGatewayConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *IngressGatewayConfig) GetEnv() map[string]interface{} {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *IngressGatewayConfig) GetLabels() *GatewayLabelsConfig {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *IngressGatewayConfig) GetLoadBalancerIP() string {
	if m != nil {
		return m.LoadBalancerIP
	}
	return ""
}

func (m *IngressGatewayConfig) GetLoadBalancerSourceRanges() []string {
	if m != nil {
		return m.LoadBalancerSourceRanges
	}
	return nil
}

func (m *IngressGatewayConfig) GetMeshExpansionPorts() []*PortsConfig {
	if m != nil {
		return m.MeshExpansionPorts
	}
	return nil
}

func (m *IngressGatewayConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Deprecated: Do not use.
func (m *IngressGatewayConfig) GetNodeSelector() map[string]interface{} {
	if m != nil {
		return m.NodeSelector
	}
	return nil
}

// Deprecated: Do not use.
func (m *IngressGatewayConfig) GetPodAnnotations() map[string]interface{} {
	if m != nil {
		return m.PodAnnotations
	}
	return nil
}

// Deprecated: Do not use.
func (m *IngressGatewayConfig) GetPodAntiAffinityLabelSelector() []map[string]interface{} {
	if m != nil {
		return m.PodAntiAffinityLabelSelector
	}
	return nil
}

// Deprecated: Do not use.
func (m *IngressGatewayConfig) GetPodAntiAffinityTermLabelSelector() []map[string]interface{} {
	if m != nil {
		return m.PodAntiAffinityTermLabelSelector
	}
	return nil
}

func (m *IngressGatewayConfig) GetPorts() []*PortsConfig {
	if m != nil {
		return m.Ports
	}
	return nil
}

// Deprecated: Do not use.
func (m *IngressGatewayConfig) GetReplicaCount() uint32 {
	if m != nil {
		return m.ReplicaCount
	}
	return 0
}

// Deprecated: Do not use.
func (m *IngressGatewayConfig) GetResources() map[string]interface{} {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *IngressGatewayConfig) GetSecretVolumes() []*SecretVolume {
	if m != nil {
		return m.SecretVolumes
	}
	return nil
}

func (m *IngressGatewayConfig) GetServiceAnnotations() map[string]interface{} {
	if m != nil {
		return m.ServiceAnnotations
	}
	return nil
}

func (m *IngressGatewayConfig) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *IngressGatewayConfig) GetZvpn() *IngressGatewayZvpnConfig {
	if m != nil {
		return m.Zvpn
	}
	return nil
}

// Deprecated: Do not use.
func (m *IngressGatewayConfig) GetRollingMaxSurge() *IntOrStringForPB {
	if m != nil {
		return m.RollingMaxSurge
	}
	return nil
}

// Deprecated: Do not use.
func (m *IngressGatewayConfig) GetRollingMaxUnavailable() *IntOrStringForPB {
	if m != nil {
		return m.RollingMaxUnavailable
	}
	return nil
}

func (m *IngressGatewayConfig) GetExternalTrafficPolicy() string {
	if m != nil {
		return m.ExternalTrafficPolicy
	}
	return ""
}

// Deprecated: Do not use.
func (m *IngressGatewayConfig) GetTolerations() []map[string]interface{} {
	if m != nil {
		return m.Tolerations
	}
	return nil
}

func (m *IngressGatewayConfig) GetIngressPorts() []map[string]interface{} {
	if m != nil {
		return m.IngressPorts
	}
	return nil
}

func (m *IngressGatewayConfig) GetAdditionalContainers() []map[string]interface{} {
	if m != nil {
		return m.AdditionalContainers
	}
	return nil
}

func (m *IngressGatewayConfig) GetConfigVolumes() []map[string]interface{} {
	if m != nil {
		return m.ConfigVolumes
	}
	return nil
}

func (m *IngressGatewayConfig) GetRunAsRoot() *protobuf.BoolValue {
	if m != nil {
		return m.RunAsRoot
	}
	return nil
}

// IngressGatewayZvpnConfig enables cross-cluster access using SNI matching.
type IngressGatewayZvpnConfig struct {
	// Controls whether ZeroVPN is enabled.
	Enabled              *protobuf.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Suffix               string              `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *IngressGatewayZvpnConfig) Reset()         { *m = IngressGatewayZvpnConfig{} }
func (m *IngressGatewayZvpnConfig) String() string { return proto.CompactTextString(m) }
func (*IngressGatewayZvpnConfig) ProtoMessage()    {}
func (*IngressGatewayZvpnConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{16}
}
func (m *IngressGatewayZvpnConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IngressGatewayZvpnConfig.Unmarshal(m, b)
}
func (m *IngressGatewayZvpnConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IngressGatewayZvpnConfig.Marshal(b, m, deterministic)
}
func (m *IngressGatewayZvpnConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IngressGatewayZvpnConfig.Merge(m, src)
}
func (m *IngressGatewayZvpnConfig) XXX_Size() int {
	return xxx_messageInfo_IngressGatewayZvpnConfig.Size(m)
}
func (m *IngressGatewayZvpnConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_IngressGatewayZvpnConfig.DiscardUnknown(m)
}

var xxx_messageInfo_IngressGatewayZvpnConfig proto.InternalMessageInfo

func (m *IngressGatewayZvpnConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *IngressGatewayZvpnConfig) GetSuffix() string {
	if m != nil {
		return m.Suffix
	}
	return ""
}

// Configuration for Istio mesh expansion to bare metal.
type MeshExpansionConfig struct {
	// Exposes Pilot and Citadel mTLS on the ingress gateway.
	Enabled *protobuf.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Exposes Pilot and Citadel mTLS and the plain text Pilot ports on an internal gateway.
	UseILB               *protobuf.BoolValue `protobuf:"bytes,2,opt,name=useILB,proto3" json:"useILB,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MeshExpansionConfig) Reset()         { *m = MeshExpansionConfig{} }
func (m *MeshExpansionConfig) String() string { return proto.CompactTextString(m) }
func (*MeshExpansionConfig) ProtoMessage()    {}
func (*MeshExpansionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{17}
}
func (m *MeshExpansionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeshExpansionConfig.Unmarshal(m, b)
}
func (m *MeshExpansionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeshExpansionConfig.Marshal(b, m, deterministic)
}
func (m *MeshExpansionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeshExpansionConfig.Merge(m, src)
}
func (m *MeshExpansionConfig) XXX_Size() int {
	return xxx_messageInfo_MeshExpansionConfig.Size(m)
}
func (m *MeshExpansionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MeshExpansionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MeshExpansionConfig proto.InternalMessageInfo

func (m *MeshExpansionConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *MeshExpansionConfig) GetUseILB() *protobuf.BoolValue {
	if m != nil {
		return m.UseILB
	}
	return nil
}

// MultiClusterConfig specifies the Configuration for Istio mesh across multiple clusters through the istio gateways.
type MultiClusterConfig struct {
	// Enables the connection between two kubernetes clusters via their respective ingressgateway services.
	// Use if the pods in each cluster cannot directly talk to one another.
	Enabled              *protobuf.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ClusterName          string              `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MultiClusterConfig) Reset()         { *m = MultiClusterConfig{} }
func (m *MultiClusterConfig) String() string { return proto.CompactTextString(m) }
func (*MultiClusterConfig) ProtoMessage()    {}
func (*MultiClusterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{18}
}
func (m *MultiClusterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiClusterConfig.Unmarshal(m, b)
}
func (m *MultiClusterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiClusterConfig.Marshal(b, m, deterministic)
}
func (m *MultiClusterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiClusterConfig.Merge(m, src)
}
func (m *MultiClusterConfig) XXX_Size() int {
	return xxx_messageInfo_MultiClusterConfig.Size(m)
}
func (m *MultiClusterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiClusterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MultiClusterConfig proto.InternalMessageInfo

func (m *MultiClusterConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *MultiClusterConfig) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

// OutboundTrafficPolicyConfig controls the default behavior of the sidecar for handling outbound traffic from the application.
type OutboundTrafficPolicyConfig struct {
	Mode                 OutboundTrafficPolicyConfig_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=v1alpha1.OutboundTrafficPolicyConfig_Mode" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *OutboundTrafficPolicyConfig) Reset()         { *m = OutboundTrafficPolicyConfig{} }
func (m *OutboundTrafficPolicyConfig) String() string { return proto.CompactTextString(m) }
func (*OutboundTrafficPolicyConfig) ProtoMessage()    {}
func (*OutboundTrafficPolicyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{19}
}
func (m *OutboundTrafficPolicyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutboundTrafficPolicyConfig.Unmarshal(m, b)
}
func (m *OutboundTrafficPolicyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutboundTrafficPolicyConfig.Marshal(b, m, deterministic)
}
func (m *OutboundTrafficPolicyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutboundTrafficPolicyConfig.Merge(m, src)
}
func (m *OutboundTrafficPolicyConfig) XXX_Size() int {
	return xxx_messageInfo_OutboundTrafficPolicyConfig.Size(m)
}
func (m *OutboundTrafficPolicyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_OutboundTrafficPolicyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_OutboundTrafficPolicyConfig proto.InternalMessageInfo

func (m *OutboundTrafficPolicyConfig) GetMode() OutboundTrafficPolicyConfig_Mode {
	if m != nil {
		return m.Mode
	}
	return OutboundTrafficPolicyConfig_ALLOW_ANY
}

// Configuration for Pilot.
type PilotConfig struct {
	// Controls whether Pilot is enabled.
	Enabled *protobuf.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Controls whether a HorizontalPodAutoscaler is installed for Pilot.
	AutoscaleEnabled *protobuf.BoolValue `protobuf:"bytes,2,opt,name=autoscaleEnabled,proto3" json:"autoscaleEnabled,omitempty"`
	// Minimum number of replicas in the HorizontalPodAutoscaler for Pilot.
	AutoscaleMin uint32 `protobuf:"varint,3,opt,name=autoscaleMin,proto3" json:"autoscaleMin,omitempty"`
	// Maximum number of replicas in the HorizontalPodAutoscaler for Pilot.
	AutoscaleMax uint32 `protobuf:"varint,4,opt,name=autoscaleMax,proto3" json:"autoscaleMax,omitempty"`
	// Number of replicas in the Pilot Deployment.
	ReplicaCount uint32 `protobuf:"varint,5,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"` // Deprecated: Do not use.
	// Image name used for Pilot.
	//
	// This can be set either to image name if hub is also set, or can be set to the full hub:name string.
	//
	// Examples: custom-pilot, docker.io/someuser:custom-pilot
	Image string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	// Trace sampling fraction.
	//
	// Used to set the fraction of time that traces are sampled. Higher values are more accurate but add CPU overhead.
	//
	// Allowed values: 0.0 to 1.0
	TraceSampling float64 `protobuf:"fixed64,8,opt,name=traceSampling,proto3" json:"traceSampling,omitempty"`
	// K8s resources settings.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	Resources *Resources `protobuf:"bytes,9,opt,name=resources,proto3" json:"resources,omitempty"` // Deprecated: Do not use.
	// Namespace that the configuration management feature is installed into, if different from Pilot namespace.
	ConfigNamespace string `protobuf:"bytes,10,opt,name=configNamespace,proto3" json:"configNamespace,omitempty"`
	// Target CPU utilization used in HorizontalPodAutoscaler.
	//
	// See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
	Cpu *CPUTargetUtilizationConfig `protobuf:"bytes,11,opt,name=cpu,proto3" json:"cpu,omitempty"` // Deprecated: Do not use.
	// K8s node selector.
	//
	// See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
	NodeSelector map[string]interface{} `protobuf:"bytes,12,opt,name=nodeSelector,proto3" json:"nodeSelector,omitempty"` // Deprecated: Do not use.
	// Maximum duration that a sidecar can be connected to a pilot.
	//
	// This setting balances out load across pilot instances, but adds some resource overhead.
	//
	// Examples: 300s, 30m, 1h
	KeepaliveMaxServerConnectionAge *types.Duration `protobuf:"bytes,13,opt,name=keepaliveMaxServerConnectionAge,proto3" json:"keepaliveMaxServerConnectionAge,omitempty"`
	// Labels that are added to Pilot pods.
	//
	// See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
	DeploymentLabels map[string]interface{} `protobuf:"bytes,14,opt,name=deploymentLabels,proto3" json:"deploymentLabels,omitempty"`
	// Configuration settings passed to Pilot as a ConfigMap.
	//
	// This controls whether the mesh config map, generated from values.yaml is generated.
	// If false, pilot wil use default values or user-supplied values, in that order of preference.
	ConfigMap *protobuf.BoolValue `protobuf:"bytes,18,opt,name=configMap,proto3" json:"configMap,omitempty"`
	// Controls whether Pilot is configured through the Mesh Control Protocol (MCP).
	//
	// If set to true, Pilot requires an MCP server (like Galley) to be installed.
	UseMCP *protobuf.BoolValue `protobuf:"bytes,20,opt,name=useMCP,proto3" json:"useMCP,omitempty"`
	// Environment variables passed to the Pilot container.
	//
	// Examples:
	// env:
	//   ENV_VAR_1: value1
	//   ENV_VAR_2: value2
	Env map[string]interface{} `protobuf:"bytes,21,opt,name=env,proto3" json:"env,omitempty"`
	// K8s rolling update strategy
	RollingMaxSurge *IntOrStringForPB `protobuf:"bytes,24,opt,name=rollingMaxSurge,proto3" json:"rollingMaxSurge,omitempty"` // Deprecated: Do not use.
	// K8s rolling update strategy
	RollingMaxUnavailable *IntOrStringForPB `protobuf:"bytes,25,opt,name=rollingMaxUnavailable,proto3" json:"rollingMaxUnavailable,omitempty"` // Deprecated: Do not use.
	//
	Tolerations []map[string]interface{} `protobuf:"bytes,26,opt,name=tolerations,proto3" json:"tolerations,omitempty"` // Deprecated: Do not use.
	// if protocol sniffing is enabled for outbound
	EnableProtocolSniffingForOutbound *protobuf.BoolValue `protobuf:"bytes,28,opt,name=enableProtocolSniffingForOutbound,proto3" json:"enableProtocolSniffingForOutbound,omitempty"`
	// if protocol sniffing is enabled for inbound
	EnableProtocolSniffingForInbound *protobuf.BoolValue `protobuf:"bytes,29,opt,name=enableProtocolSniffingForInbound,proto3" json:"enableProtocolSniffingForInbound,omitempty"`
	// K8s annotations for pods.
	//
	// See: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
	PodAnnotations map[string]interface{} `protobuf:"bytes,30,opt,name=podAnnotations,proto3" json:"podAnnotations,omitempty"` // Deprecated: Do not use.
	// ConfigSource describes a source of configuration data for networking
	// rules, and other Istio configuration artifacts. Multiple data sources
	// can be configured for a single control plane.
	ConfigSource            *PilotConfigSource `protobuf:"bytes,31,opt,name=configSource,proto3" json:"configSource,omitempty"`
	JwksResolverExtraRootCA string             `protobuf:"bytes,32,opt,name=jwksResolverExtraRootCA,proto3" json:"jwksResolverExtraRootCA,omitempty"`
	Plugins                 []string   `protobuf:"bytes,33,opt,name=plugins,proto3" json:"plugins,omitempty"`
	Hub                     string             `protobuf:"bytes,34,opt,name=hub,proto3" json:"hub,omitempty"`
	Tag                     interface{}     `protobuf:"bytes,35,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}           `json:"-"`
	XXX_unrecognized        []byte             `json:"-"`
	XXX_sizecache           int32              `json:"-"`
}

func (m *PilotConfig) Reset()         { *m = PilotConfig{} }
func (m *PilotConfig) String() string { return proto.CompactTextString(m) }
func (*PilotConfig) ProtoMessage()    {}
func (*PilotConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{20}
}
func (m *PilotConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PilotConfig.Unmarshal(m, b)
}
func (m *PilotConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PilotConfig.Marshal(b, m, deterministic)
}
func (m *PilotConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PilotConfig.Merge(m, src)
}
func (m *PilotConfig) XXX_Size() int {
	return xxx_messageInfo_PilotConfig.Size(m)
}
func (m *PilotConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PilotConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PilotConfig proto.InternalMessageInfo

func (m *PilotConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *PilotConfig) GetAutoscaleEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.AutoscaleEnabled
	}
	return nil
}

func (m *PilotConfig) GetAutoscaleMin() uint32 {
	if m != nil {
		return m.AutoscaleMin
	}
	return 0
}

func (m *PilotConfig) GetAutoscaleMax() uint32 {
	if m != nil {
		return m.AutoscaleMax
	}
	return 0
}

// Deprecated: Do not use.
func (m *PilotConfig) GetReplicaCount() uint32 {
	if m != nil {
		return m.ReplicaCount
	}
	return 0
}

func (m *PilotConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *PilotConfig) GetTraceSampling() float64 {
	if m != nil {
		return m.TraceSampling
	}
	return 0
}

// Deprecated: Do not use.
func (m *PilotConfig) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *PilotConfig) GetConfigNamespace() string {
	if m != nil {
		return m.ConfigNamespace
	}
	return ""
}

// Deprecated: Do not use.
func (m *PilotConfig) GetCpu() *CPUTargetUtilizationConfig {
	if m != nil {
		return m.Cpu
	}
	return nil
}

// Deprecated: Do not use.
func (m *PilotConfig) GetNodeSelector() map[string]interface{} {
	if m != nil {
		return m.NodeSelector
	}
	return nil
}

func (m *PilotConfig) GetKeepaliveMaxServerConnectionAge() *types.Duration {
	if m != nil {
		return m.KeepaliveMaxServerConnectionAge
	}
	return nil
}

func (m *PilotConfig) GetDeploymentLabels() map[string]interface{} {
	if m != nil {
		return m.DeploymentLabels
	}
	return nil
}

func (m *PilotConfig) GetConfigMap() *protobuf.BoolValue {
	if m != nil {
		return m.ConfigMap
	}
	return nil
}

func (m *PilotConfig) GetUseMCP() *protobuf.BoolValue {
	if m != nil {
		return m.UseMCP
	}
	return nil
}

func (m *PilotConfig) GetEnv() map[string]interface{} {
	if m != nil {
		return m.Env
	}
	return nil
}

// Deprecated: Do not use.
func (m *PilotConfig) GetRollingMaxSurge() *IntOrStringForPB {
	if m != nil {
		return m.RollingMaxSurge
	}
	return nil
}

// Deprecated: Do not use.
func (m *PilotConfig) GetRollingMaxUnavailable() *IntOrStringForPB {
	if m != nil {
		return m.RollingMaxUnavailable
	}
	return nil
}

// Deprecated: Do not use.
func (m *PilotConfig) GetTolerations() []map[string]interface{} {
	if m != nil {
		return m.Tolerations
	}
	return nil
}

func (m *PilotConfig) GetEnableProtocolSniffingForOutbound() *protobuf.BoolValue {
	if m != nil {
		return m.EnableProtocolSniffingForOutbound
	}
	return nil
}

func (m *PilotConfig) GetEnableProtocolSniffingForInbound() *protobuf.BoolValue {
	if m != nil {
		return m.EnableProtocolSniffingForInbound
	}
	return nil
}

// Deprecated: Do not use.
func (m *PilotConfig) GetPodAnnotations() map[string]interface{} {
	if m != nil {
		return m.PodAnnotations
	}
	return nil
}

func (m *PilotConfig) GetConfigSource() *PilotConfigSource {
	if m != nil {
		return m.ConfigSource
	}
	return nil
}

func (m *PilotConfig) GetJwksResolverExtraRootCA() string {
	if m != nil {
		return m.JwksResolverExtraRootCA
	}
	return ""
}

func (m *PilotConfig) GetPlugins() []string {
	if m != nil {
		return m.Plugins
	}
	return nil
}

func (m *PilotConfig) GetHub() string {
	if m != nil {
		return m.Hub
	}
	return ""
}

func (m *PilotConfig) GetTag() interface{} {
	if m != nil {
		return m.Tag
	}
	return nil
}

// Controls legacy k8s ingress. Only one pilot profile should enable ingress support.
type PilotIngressConfig struct {
	// Sets the type ingress service for Pilot.
	//
	// If empty, node-port is assumed.
	//
	// Allowed values: node-port, istio-ingressgateway, ingress
	IngressService        string                `protobuf:"bytes,1,opt,name=ingressService,proto3" json:"ingressService,omitempty"`
	IngressControllerMode IngressControllerMode `protobuf:"varint,2,opt,name=ingressControllerMode,proto3,enum=v1alpha1.IngressControllerMode" json:"ingressControllerMode,omitempty"`
	// If mode is STRICT, this value must be set on "kubernetes.io/ingress.class" annotation to activate.
	IngressClass         string   `protobuf:"bytes,3,opt,name=ingressClass,proto3" json:"ingressClass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PilotIngressConfig) Reset()         { *m = PilotIngressConfig{} }
func (m *PilotIngressConfig) String() string { return proto.CompactTextString(m) }
func (*PilotIngressConfig) ProtoMessage()    {}
func (*PilotIngressConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{21}
}
func (m *PilotIngressConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PilotIngressConfig.Unmarshal(m, b)
}
func (m *PilotIngressConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PilotIngressConfig.Marshal(b, m, deterministic)
}
func (m *PilotIngressConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PilotIngressConfig.Merge(m, src)
}
func (m *PilotIngressConfig) XXX_Size() int {
	return xxx_messageInfo_PilotIngressConfig.Size(m)
}
func (m *PilotIngressConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PilotIngressConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PilotIngressConfig proto.InternalMessageInfo

func (m *PilotIngressConfig) GetIngressService() string {
	if m != nil {
		return m.IngressService
	}
	return ""
}

func (m *PilotIngressConfig) GetIngressControllerMode() IngressControllerMode {
	if m != nil {
		return m.IngressControllerMode
	}
	return IngressControllerMode_UNSPECIFIED
}

func (m *PilotIngressConfig) GetIngressClass() string {
	if m != nil {
		return m.IngressClass
	}
	return ""
}

// Controls whether Istio policy is applied to Pilot.
type PilotPolicyConfig struct {
	// Controls whether Istio policy is applied to Pilot.
	Enabled              *protobuf.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PilotPolicyConfig) Reset()         { *m = PilotPolicyConfig{} }
func (m *PilotPolicyConfig) String() string { return proto.CompactTextString(m) }
func (*PilotPolicyConfig) ProtoMessage()    {}
func (*PilotPolicyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{22}
}
func (m *PilotPolicyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PilotPolicyConfig.Unmarshal(m, b)
}
func (m *PilotPolicyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PilotPolicyConfig.Marshal(b, m, deterministic)
}
func (m *PilotPolicyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PilotPolicyConfig.Merge(m, src)
}
func (m *PilotPolicyConfig) XXX_Size() int {
	return xxx_messageInfo_PilotPolicyConfig.Size(m)
}
func (m *PilotPolicyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PilotPolicyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PilotPolicyConfig proto.InternalMessageInfo

func (m *PilotPolicyConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

// Controls telemetry configuration
type TelemetryConfig struct {
	// Controls whether telemetry is exported for Pilot.
	Enabled *protobuf.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Use telemetry v2.
	V2                   *TelemetryV2Config `protobuf:"bytes,3,opt,name=v2,proto3" json:"v2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TelemetryConfig) Reset()         { *m = TelemetryConfig{} }
func (m *TelemetryConfig) String() string { return proto.CompactTextString(m) }
func (*TelemetryConfig) ProtoMessage()    {}
func (*TelemetryConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{23}
}
func (m *TelemetryConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemetryConfig.Unmarshal(m, b)
}
func (m *TelemetryConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemetryConfig.Marshal(b, m, deterministic)
}
func (m *TelemetryConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemetryConfig.Merge(m, src)
}
func (m *TelemetryConfig) XXX_Size() int {
	return xxx_messageInfo_TelemetryConfig.Size(m)
}
func (m *TelemetryConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemetryConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TelemetryConfig proto.InternalMessageInfo

func (m *TelemetryConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *TelemetryConfig) GetV2() *TelemetryV2Config {
	if m != nil {
		return m.V2
	}
	return nil
}

// Controls whether pilot will configure telemetry v2.
type TelemetryV2Config struct {
	// Controls whether pilot will configure telemetry v2.
	Enabled              *protobuf.BoolValue                     `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	MetadataExchange     *TelemetryV2MetadataExchangeConfig      `protobuf:"bytes,4,opt,name=metadata_exchange,json=metadataExchange,proto3" json:"metadata_exchange,omitempty"`
	Prometheus           *TelemetryV2PrometheusConfig            `protobuf:"bytes,2,opt,name=prometheus,proto3" json:"prometheus,omitempty"`
	Stackdriver          *TelemetryV2StackDriverConfig           `protobuf:"bytes,3,opt,name=stackdriver,proto3" json:"stackdriver,omitempty"`
	AccessLogPolicy      *TelemetryV2AccessLogPolicyFilterConfig `protobuf:"bytes,5,opt,name=access_log_policy,json=accessLogPolicy,proto3" json:"access_log_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *TelemetryV2Config) Reset()         { *m = TelemetryV2Config{} }
func (m *TelemetryV2Config) String() string { return proto.CompactTextString(m) }
func (*TelemetryV2Config) ProtoMessage()    {}
func (*TelemetryV2Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{24}
}
func (m *TelemetryV2Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemetryV2Config.Unmarshal(m, b)
}
func (m *TelemetryV2Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemetryV2Config.Marshal(b, m, deterministic)
}
func (m *TelemetryV2Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemetryV2Config.Merge(m, src)
}
func (m *TelemetryV2Config) XXX_Size() int {
	return xxx_messageInfo_TelemetryV2Config.Size(m)
}
func (m *TelemetryV2Config) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemetryV2Config.DiscardUnknown(m)
}

var xxx_messageInfo_TelemetryV2Config proto.InternalMessageInfo

func (m *TelemetryV2Config) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *TelemetryV2Config) GetMetadataExchange() *TelemetryV2MetadataExchangeConfig {
	if m != nil {
		return m.MetadataExchange
	}
	return nil
}

func (m *TelemetryV2Config) GetPrometheus() *TelemetryV2PrometheusConfig {
	if m != nil {
		return m.Prometheus
	}
	return nil
}

func (m *TelemetryV2Config) GetStackdriver() *TelemetryV2StackDriverConfig {
	if m != nil {
		return m.Stackdriver
	}
	return nil
}

func (m *TelemetryV2Config) GetAccessLogPolicy() *TelemetryV2AccessLogPolicyFilterConfig {
	if m != nil {
		return m.AccessLogPolicy
	}
	return nil
}

type TelemetryV2MetadataExchangeConfig struct {
	// Controls whether enabled WebAssembly runtime for metadata exchange filter.
	WasmEnabled          *protobuf.BoolValue `protobuf:"bytes,2,opt,name=wasmEnabled,proto3" json:"wasmEnabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TelemetryV2MetadataExchangeConfig) Reset()         { *m = TelemetryV2MetadataExchangeConfig{} }
func (m *TelemetryV2MetadataExchangeConfig) String() string { return proto.CompactTextString(m) }
func (*TelemetryV2MetadataExchangeConfig) ProtoMessage()    {}
func (*TelemetryV2MetadataExchangeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{25}
}
func (m *TelemetryV2MetadataExchangeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemetryV2MetadataExchangeConfig.Unmarshal(m, b)
}
func (m *TelemetryV2MetadataExchangeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemetryV2MetadataExchangeConfig.Marshal(b, m, deterministic)
}
func (m *TelemetryV2MetadataExchangeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemetryV2MetadataExchangeConfig.Merge(m, src)
}
func (m *TelemetryV2MetadataExchangeConfig) XXX_Size() int {
	return xxx_messageInfo_TelemetryV2MetadataExchangeConfig.Size(m)
}
func (m *TelemetryV2MetadataExchangeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemetryV2MetadataExchangeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TelemetryV2MetadataExchangeConfig proto.InternalMessageInfo

func (m *TelemetryV2MetadataExchangeConfig) GetWasmEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.WasmEnabled
	}
	return nil
}

// Conrols telemetry v2 prometheus settings.
type TelemetryV2PrometheusConfig struct {
	// Controls whether stats envoyfilter would be enabled or not.
	Enabled *protobuf.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Controls whether enabled WebAssembly runtime for stats filter.
	WasmEnabled          *protobuf.BoolValue `protobuf:"bytes,2,opt,name=wasmEnabled,proto3" json:"wasmEnabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TelemetryV2PrometheusConfig) Reset()         { *m = TelemetryV2PrometheusConfig{} }
func (m *TelemetryV2PrometheusConfig) String() string { return proto.CompactTextString(m) }
func (*TelemetryV2PrometheusConfig) ProtoMessage()    {}
func (*TelemetryV2PrometheusConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{26}
}
func (m *TelemetryV2PrometheusConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemetryV2PrometheusConfig.Unmarshal(m, b)
}
func (m *TelemetryV2PrometheusConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemetryV2PrometheusConfig.Marshal(b, m, deterministic)
}
func (m *TelemetryV2PrometheusConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemetryV2PrometheusConfig.Merge(m, src)
}
func (m *TelemetryV2PrometheusConfig) XXX_Size() int {
	return xxx_messageInfo_TelemetryV2PrometheusConfig.Size(m)
}
func (m *TelemetryV2PrometheusConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemetryV2PrometheusConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TelemetryV2PrometheusConfig proto.InternalMessageInfo

func (m *TelemetryV2PrometheusConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *TelemetryV2PrometheusConfig) GetWasmEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.WasmEnabled
	}
	return nil
}

// Conrols telemetry v2 stackdriver settings.
type TelemetryV2StackDriverConfig struct {
	Enabled              *protobuf.BoolValue     `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Logging              *protobuf.BoolValue     `protobuf:"bytes,2,opt,name=logging,proto3" json:"logging,omitempty"`
	Monitoring           *protobuf.BoolValue     `protobuf:"bytes,3,opt,name=monitoring,proto3" json:"monitoring,omitempty"`
	Topology             *protobuf.BoolValue     `protobuf:"bytes,4,opt,name=topology,proto3" json:"topology,omitempty"`
	DisableOutbound      *protobuf.BoolValue     `protobuf:"bytes,6,opt,name=disableOutbound,proto3" json:"disableOutbound,omitempty"`
	ConfigOverride       map[string]interface{} `protobuf:"bytes,5,opt,name=configOverride,proto3" json:"configOverride,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TelemetryV2StackDriverConfig) Reset()         { *m = TelemetryV2StackDriverConfig{} }
func (m *TelemetryV2StackDriverConfig) String() string { return proto.CompactTextString(m) }
func (*TelemetryV2StackDriverConfig) ProtoMessage()    {}
func (*TelemetryV2StackDriverConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{27}
}
func (m *TelemetryV2StackDriverConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemetryV2StackDriverConfig.Unmarshal(m, b)
}
func (m *TelemetryV2StackDriverConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemetryV2StackDriverConfig.Marshal(b, m, deterministic)
}
func (m *TelemetryV2StackDriverConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemetryV2StackDriverConfig.Merge(m, src)
}
func (m *TelemetryV2StackDriverConfig) XXX_Size() int {
	return xxx_messageInfo_TelemetryV2StackDriverConfig.Size(m)
}
func (m *TelemetryV2StackDriverConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemetryV2StackDriverConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TelemetryV2StackDriverConfig proto.InternalMessageInfo

func (m *TelemetryV2StackDriverConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *TelemetryV2StackDriverConfig) GetLogging() *protobuf.BoolValue {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *TelemetryV2StackDriverConfig) GetMonitoring() *protobuf.BoolValue {
	if m != nil {
		return m.Monitoring
	}
	return nil
}

func (m *TelemetryV2StackDriverConfig) GetTopology() *protobuf.BoolValue {
	if m != nil {
		return m.Topology
	}
	return nil
}

func (m *TelemetryV2StackDriverConfig) GetDisableOutbound() *protobuf.BoolValue {
	if m != nil {
		return m.DisableOutbound
	}
	return nil
}

func (m *TelemetryV2StackDriverConfig) GetConfigOverride() map[string]interface{} {
	if m != nil {
		return m.ConfigOverride
	}
	return nil
}

// Conrols telemetry v2 access log policy filter settings.
type TelemetryV2AccessLogPolicyFilterConfig struct {
	Enabled              *protobuf.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	LogWindowDuration    *types.Duration     `protobuf:"bytes,2,opt,name=logWindowDuration,proto3" json:"logWindowDuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TelemetryV2AccessLogPolicyFilterConfig) Reset() {
	*m = TelemetryV2AccessLogPolicyFilterConfig{}
}
func (m *TelemetryV2AccessLogPolicyFilterConfig) String() string { return proto.CompactTextString(m) }
func (*TelemetryV2AccessLogPolicyFilterConfig) ProtoMessage()    {}
func (*TelemetryV2AccessLogPolicyFilterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{28}
}
func (m *TelemetryV2AccessLogPolicyFilterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelemetryV2AccessLogPolicyFilterConfig.Unmarshal(m, b)
}
func (m *TelemetryV2AccessLogPolicyFilterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelemetryV2AccessLogPolicyFilterConfig.Marshal(b, m, deterministic)
}
func (m *TelemetryV2AccessLogPolicyFilterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelemetryV2AccessLogPolicyFilterConfig.Merge(m, src)
}
func (m *TelemetryV2AccessLogPolicyFilterConfig) XXX_Size() int {
	return xxx_messageInfo_TelemetryV2AccessLogPolicyFilterConfig.Size(m)
}
func (m *TelemetryV2AccessLogPolicyFilterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TelemetryV2AccessLogPolicyFilterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TelemetryV2AccessLogPolicyFilterConfig proto.InternalMessageInfo

func (m *TelemetryV2AccessLogPolicyFilterConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *TelemetryV2AccessLogPolicyFilterConfig) GetLogWindowDuration() *types.Duration {
	if m != nil {
		return m.LogWindowDuration
	}
	return nil
}

// PilotConfigSource describes information about a configuration store inside a
// mesh. A single control plane instance can interact with one or more data
// sources.
type PilotConfigSource struct {
	// Describes the source of configuration, if nothing is specified default is MCP.
	SubscribedResources  []string `protobuf:"bytes,1,rep,name=subscribedResources,proto3" json:"subscribedResources,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PilotConfigSource) Reset()         { *m = PilotConfigSource{} }
func (m *PilotConfigSource) String() string { return proto.CompactTextString(m) }
func (*PilotConfigSource) ProtoMessage()    {}
func (*PilotConfigSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{29}
}
func (m *PilotConfigSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PilotConfigSource.Unmarshal(m, b)
}
func (m *PilotConfigSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PilotConfigSource.Marshal(b, m, deterministic)
}
func (m *PilotConfigSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PilotConfigSource.Merge(m, src)
}
func (m *PilotConfigSource) XXX_Size() int {
	return xxx_messageInfo_PilotConfigSource.Size(m)
}
func (m *PilotConfigSource) XXX_DiscardUnknown() {
	xxx_messageInfo_PilotConfigSource.DiscardUnknown(m)
}

var xxx_messageInfo_PilotConfigSource proto.InternalMessageInfo

func (m *PilotConfigSource) GetSubscribedResources() []string {
	if m != nil {
		return m.SubscribedResources
	}
	return nil
}

// Configuration for a port.
type PortsConfig struct {
	// Port name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Port number.
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// NodePort number.
	NodePort int32 `protobuf:"varint,3,opt,name=nodePort,proto3" json:"nodePort,omitempty"`
	// Target port number.
	TargetPort           int32    `protobuf:"varint,4,opt,name=targetPort,proto3" json:"targetPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortsConfig) Reset()         { *m = PortsConfig{} }
func (m *PortsConfig) String() string { return proto.CompactTextString(m) }
func (*PortsConfig) ProtoMessage()    {}
func (*PortsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{30}
}
func (m *PortsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortsConfig.Unmarshal(m, b)
}
func (m *PortsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortsConfig.Marshal(b, m, deterministic)
}
func (m *PortsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortsConfig.Merge(m, src)
}
func (m *PortsConfig) XXX_Size() int {
	return xxx_messageInfo_PortsConfig.Size(m)
}
func (m *PortsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PortsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PortsConfig proto.InternalMessageInfo

func (m *PortsConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PortsConfig) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *PortsConfig) GetNodePort() int32 {
	if m != nil {
		return m.NodePort
	}
	return 0
}

func (m *PortsConfig) GetTargetPort() int32 {
	if m != nil {
		return m.TargetPort
	}
	return 0
}

// Configuration for Proxy.
type ProxyConfig struct {
	AutoInject string `protobuf:"bytes,4,opt,name=autoInject,proto3" json:"autoInject,omitempty"`
	// Domain for the cluster, default: "cluster.local".
	//
	// K8s allows this to be customized, see https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/
	ClusterDomain string `protobuf:"bytes,5,opt,name=clusterDomain,proto3" json:"clusterDomain,omitempty"`
	// Per Component log level for proxy, applies to gateways and sidecars.
	//
	// If a component level is not set, then the global "logLevel" will be used. If left empty, "misc:error" is used.
	ComponentLogLevel string `protobuf:"bytes,6,opt,name=componentLogLevel,proto3" json:"componentLogLevel,omitempty"`
	// Enables core dumps for newly injected sidecars.
	//
	// If set, newly injected sidecars will have core dumps enabled.
	EnableCoreDump *protobuf.BoolValue `protobuf:"bytes,9,opt,name=enableCoreDump,proto3" json:"enableCoreDump,omitempty"`
	// Specifies the Istio ingress ports not to capture.
	ExcludeInboundPorts string `protobuf:"bytes,12,opt,name=excludeInboundPorts,proto3" json:"excludeInboundPorts,omitempty"`
	// Lists the excluded IP ranges of Istio egress traffic that the sidecar captures.
	ExcludeIPRanges string `protobuf:"bytes,13,opt,name=excludeIPRanges,proto3" json:"excludeIPRanges,omitempty"`
	// Image name or path for the proxy, default: "proxyv2".
	//
	// If registry or tag are not specified, global.hub and global.tag are used.
	//
	// Examples: my-proxy (uses global.hub/tag), docker.io/myrepo/my-proxy:v1.0.0
	Image string `protobuf:"bytes,14,opt,name=image,proto3" json:"image,omitempty"`
	// Lists the IP ranges of Istio egress traffic that the sidecar captures.
	//
	// Example: "172.30.0.0/16,172.20.0.0/16"
	// This would only capture egress traffic on those two IP Ranges, all other outbound traffic would # be allowed by the sidecar."
	IncludeIPRanges string `protobuf:"bytes,16,opt,name=includeIPRanges,proto3" json:"includeIPRanges,omitempty"`
	// Log level for proxy, applies to gateways and sidecars. If left empty, "warning" is used. Expected values are: trace\|debug\|info\|warning\|error\|critical\|off
	LogLevel string `protobuf:"bytes,18,opt,name=logLevel,proto3" json:"logLevel,omitempty"`
	// Enables privileged securityContext for the istio-proxy container.
	//
	// See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
	Privileged *protobuf.BoolValue `protobuf:"bytes,19,opt,name=privileged,proto3" json:"privileged,omitempty"`
	// Sets the initial delay for readiness probes in seconds.
	ReadinessInitialDelaySeconds uint32 `protobuf:"varint,20,opt,name=readinessInitialDelaySeconds,proto3" json:"readinessInitialDelaySeconds,omitempty"`
	// Sets the interval between readiness probes in seconds.
	ReadinessPeriodSeconds uint32 `protobuf:"varint,21,opt,name=readinessPeriodSeconds,proto3" json:"readinessPeriodSeconds,omitempty"`
	// Sets the number of successive failed probes before indicating readiness failure.
	ReadinessFailureThreshold uint32 `protobuf:"varint,22,opt,name=readinessFailureThreshold,proto3" json:"readinessFailureThreshold,omitempty"`
	// Default port used for the Pilot agent's health checks.
	StatusPort uint32 `protobuf:"varint,23,opt,name=statusPort,proto3" json:"statusPort,omitempty"`
	// K8s resources settings.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	Resources            *Resources              `protobuf:"bytes,24,opt,name=resources,proto3" json:"resources,omitempty"` // Deprecated: Do not use.
	Tracer               Tracer                  `protobuf:"varint,25,opt,name=tracer,proto3,enum=v1alpha1.Tracer" json:"tracer,omitempty"`
	ExcludeOutboundPorts string                  `protobuf:"bytes,28,opt,name=excludeOutboundPorts,proto3" json:"excludeOutboundPorts,omitempty"`
	Lifecycle            map[string]interface{} `protobuf:"bytes,36,opt,name=lifecycle,proto3" json:"lifecycle,omitempty"`
	// Causes the sidecar to be injected at the front of the container list and blocks the start of the other containers until the proxy is ready
	HoldApplicationUntilProxyStarts *protobuf.BoolValue `protobuf:"bytes,37,opt,name=holdApplicationUntilProxyStarts,proto3" json:"holdApplicationUntilProxyStarts,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}            `json:"-"`
	XXX_unrecognized                []byte              `json:"-"`
	XXX_sizecache                   int32               `json:"-"`
}

func (m *ProxyConfig) Reset()         { *m = ProxyConfig{} }
func (m *ProxyConfig) String() string { return proto.CompactTextString(m) }
func (*ProxyConfig) ProtoMessage()    {}
func (*ProxyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{31}
}
func (m *ProxyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyConfig.Unmarshal(m, b)
}
func (m *ProxyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyConfig.Marshal(b, m, deterministic)
}
func (m *ProxyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyConfig.Merge(m, src)
}
func (m *ProxyConfig) XXX_Size() int {
	return xxx_messageInfo_ProxyConfig.Size(m)
}
func (m *ProxyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyConfig proto.InternalMessageInfo

func (m *ProxyConfig) GetAutoInject() string {
	if m != nil {
		return m.AutoInject
	}
	return ""
}

func (m *ProxyConfig) GetClusterDomain() string {
	if m != nil {
		return m.ClusterDomain
	}
	return ""
}

func (m *ProxyConfig) GetComponentLogLevel() string {
	if m != nil {
		return m.ComponentLogLevel
	}
	return ""
}

func (m *ProxyConfig) GetEnableCoreDump() *protobuf.BoolValue {
	if m != nil {
		return m.EnableCoreDump
	}
	return nil
}

func (m *ProxyConfig) GetExcludeInboundPorts() string {
	if m != nil {
		return m.ExcludeInboundPorts
	}
	return ""
}

func (m *ProxyConfig) GetExcludeIPRanges() string {
	if m != nil {
		return m.ExcludeIPRanges
	}
	return ""
}

func (m *ProxyConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ProxyConfig) GetIncludeIPRanges() string {
	if m != nil {
		return m.IncludeIPRanges
	}
	return ""
}

func (m *ProxyConfig) GetLogLevel() string {
	if m != nil {
		return m.LogLevel
	}
	return ""
}

func (m *ProxyConfig) GetPrivileged() *protobuf.BoolValue {
	if m != nil {
		return m.Privileged
	}
	return nil
}

func (m *ProxyConfig) GetReadinessInitialDelaySeconds() uint32 {
	if m != nil {
		return m.ReadinessInitialDelaySeconds
	}
	return 0
}

func (m *ProxyConfig) GetReadinessPeriodSeconds() uint32 {
	if m != nil {
		return m.ReadinessPeriodSeconds
	}
	return 0
}

func (m *ProxyConfig) GetReadinessFailureThreshold() uint32 {
	if m != nil {
		return m.ReadinessFailureThreshold
	}
	return 0
}

func (m *ProxyConfig) GetStatusPort() uint32 {
	if m != nil {
		return m.StatusPort
	}
	return 0
}

// Deprecated: Do not use.
func (m *ProxyConfig) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ProxyConfig) GetTracer() Tracer {
	if m != nil {
		return m.Tracer
	}
	return Tracer_zipkin
}

func (m *ProxyConfig) GetExcludeOutboundPorts() string {
	if m != nil {
		return m.ExcludeOutboundPorts
	}
	return ""
}

func (m *ProxyConfig) GetLifecycle() map[string]interface{} {
	if m != nil {
		return m.Lifecycle
	}
	return nil
}

func (m *ProxyConfig) GetHoldApplicationUntilProxyStarts() *protobuf.BoolValue {
	if m != nil {
		return m.HoldApplicationUntilProxyStarts
	}
	return nil
}

// Configuration for proxy_init container which sets the pods' networking to intercept the inbound/outbound traffic.
type ProxyInitConfig struct {
	// Specifies the image for the proxy_init container.
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// K8s resources settings.
	//
	// See https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container
	Resources            *Resources `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProxyInitConfig) Reset()         { *m = ProxyInitConfig{} }
func (m *ProxyInitConfig) String() string { return proto.CompactTextString(m) }
func (*ProxyInitConfig) ProtoMessage()    {}
func (*ProxyInitConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{32}
}
func (m *ProxyInitConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyInitConfig.Unmarshal(m, b)
}
func (m *ProxyInitConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyInitConfig.Marshal(b, m, deterministic)
}
func (m *ProxyInitConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyInitConfig.Merge(m, src)
}
func (m *ProxyInitConfig) XXX_Size() int {
	return xxx_messageInfo_ProxyInitConfig.Size(m)
}
func (m *ProxyInitConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyInitConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyInitConfig proto.InternalMessageInfo

func (m *ProxyInitConfig) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

// Deprecated: Do not use.
func (m *ProxyInitConfig) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

// Configuration for K8s resource requests.
type ResourcesRequestsConfig struct {
	Cpu                  string   `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory               string   `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourcesRequestsConfig) Reset()         { *m = ResourcesRequestsConfig{} }
func (m *ResourcesRequestsConfig) String() string { return proto.CompactTextString(m) }
func (*ResourcesRequestsConfig) ProtoMessage()    {}
func (*ResourcesRequestsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{33}
}
func (m *ResourcesRequestsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourcesRequestsConfig.Unmarshal(m, b)
}
func (m *ResourcesRequestsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourcesRequestsConfig.Marshal(b, m, deterministic)
}
func (m *ResourcesRequestsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcesRequestsConfig.Merge(m, src)
}
func (m *ResourcesRequestsConfig) XXX_Size() int {
	return xxx_messageInfo_ResourcesRequestsConfig.Size(m)
}
func (m *ResourcesRequestsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcesRequestsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcesRequestsConfig proto.InternalMessageInfo

func (m *ResourcesRequestsConfig) GetCpu() string {
	if m != nil {
		return m.Cpu
	}
	return ""
}

func (m *ResourcesRequestsConfig) GetMemory() string {
	if m != nil {
		return m.Memory
	}
	return ""
}

// Configuration for the SecretDiscoveryService instead of using K8S secrets to mount the certificates.
type SDSConfig struct {
	Token                map[string]interface{} `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SDSConfig) Reset()         { *m = SDSConfig{} }
func (m *SDSConfig) String() string { return proto.CompactTextString(m) }
func (*SDSConfig) ProtoMessage()    {}
func (*SDSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{34}
}
func (m *SDSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SDSConfig.Unmarshal(m, b)
}
func (m *SDSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SDSConfig.Marshal(b, m, deterministic)
}
func (m *SDSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SDSConfig.Merge(m, src)
}
func (m *SDSConfig) XXX_Size() int {
	return xxx_messageInfo_SDSConfig.Size(m)
}
func (m *SDSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SDSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SDSConfig proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *SDSConfig) GetToken() map[string]interface{} {
	if m != nil {
		return m.Token
	}
	return nil
}

// Configuration for secret volume mounts.
//
// See https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets.
type SecretVolume struct {
	MountPath            string   `protobuf:"bytes,1,opt,name=mountPath,proto3" json:"mountPath,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SecretName           string   `protobuf:"bytes,3,opt,name=secretName,proto3" json:"secretName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecretVolume) Reset()         { *m = SecretVolume{} }
func (m *SecretVolume) String() string { return proto.CompactTextString(m) }
func (*SecretVolume) ProtoMessage()    {}
func (*SecretVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{35}
}
func (m *SecretVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecretVolume.Unmarshal(m, b)
}
func (m *SecretVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecretVolume.Marshal(b, m, deterministic)
}
func (m *SecretVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecretVolume.Merge(m, src)
}
func (m *SecretVolume) XXX_Size() int {
	return xxx_messageInfo_SecretVolume.Size(m)
}
func (m *SecretVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_SecretVolume.DiscardUnknown(m)
}

var xxx_messageInfo_SecretVolume proto.InternalMessageInfo

func (m *SecretVolume) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *SecretVolume) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SecretVolume) GetSecretName() string {
	if m != nil {
		return m.SecretName
	}
	return ""
}

// ServiceConfig is described in istio.io documentation.
type ServiceConfig struct {
	Annotations          map[string]interface{} `protobuf:"bytes,1,opt,name=annotations,proto3" json:"annotations,omitempty"`
	ExternalPort         uint32                  `protobuf:"varint,2,opt,name=externalPort,proto3" json:"externalPort,omitempty"`
	Name                 string                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string                  `protobuf:"bytes,18,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ServiceConfig) Reset()         { *m = ServiceConfig{} }
func (m *ServiceConfig) String() string { return proto.CompactTextString(m) }
func (*ServiceConfig) ProtoMessage()    {}
func (*ServiceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{36}
}
func (m *ServiceConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceConfig.Unmarshal(m, b)
}
func (m *ServiceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceConfig.Marshal(b, m, deterministic)
}
func (m *ServiceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceConfig.Merge(m, src)
}
func (m *ServiceConfig) XXX_Size() int {
	return xxx_messageInfo_ServiceConfig.Size(m)
}
func (m *ServiceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceConfig proto.InternalMessageInfo

func (m *ServiceConfig) GetAnnotations() map[string]interface{} {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ServiceConfig) GetExternalPort() uint32 {
	if m != nil {
		return m.ExternalPort
	}
	return 0
}

func (m *ServiceConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceConfig) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

// SidecarInjectorConfig is described in istio.io documentation.
type SidecarInjectorConfig struct {
	// Enables sidecar auto-injection in namespaces by default.
	EnableNamespacesByDefault *protobuf.BoolValue `protobuf:"bytes,2,opt,name=enableNamespacesByDefault,proto3" json:"enableNamespacesByDefault,omitempty"`
	// Instructs Istio to not inject the sidecar on those pods, based on labels that are present in those pods.
	//
	// Annotations in the pods have higher precedence than the label selectors.
	// Order of evaluation: Pod Annotations → NeverInjectSelector → AlwaysInjectSelector → Default Policy.
	// See https://istio.io/docs/setup/kubernetes/additional-setup/sidecar-injection/#more-control-adding-exceptions
	NeverInjectSelector []map[string]interface{} `protobuf:"bytes,11,opt,name=neverInjectSelector,proto3" json:"neverInjectSelector,omitempty"`
	// See NeverInjectSelector.
	AlwaysInjectSelector []map[string]interface{} `protobuf:"bytes,12,opt,name=alwaysInjectSelector,proto3" json:"alwaysInjectSelector,omitempty"`
	//  If true, webhook or istioctl injector will rewrite PodSpec for liveness health check to redirect request to sidecar. This makes liveness check work even when mTLS is enabled.
	RewriteAppHTTPProbe *protobuf.BoolValue `protobuf:"bytes,16,opt,name=rewriteAppHTTPProbe,proto3" json:"rewriteAppHTTPProbe,omitempty"`
	InjectLabel         string              `protobuf:"bytes,18,opt,name=injectLabel,proto3" json:"injectLabel,omitempty"`
	// injectedAnnotations are additional annotations that will be added to the pod spec after injection
	// This is primarily to support PSP annotations.
	InjectedAnnotations map[string]interface{} `protobuf:"bytes,19,opt,name=injectedAnnotations,proto3" json:"injectedAnnotations,omitempty"`
	// Enable objectSelector to filter out pods with no need for sidecar before calling istio-sidecar-injector.
	ObjectSelector map[string]interface{} `protobuf:"bytes,21,opt,name=objectSelector,proto3" json:"objectSelector,omitempty"`
	// Configure the injection url for sidecar injector webhook
	InjectionURL         string   `protobuf:"bytes,22,opt,name=injectionURL,proto3" json:"injectionURL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SidecarInjectorConfig) Reset()         { *m = SidecarInjectorConfig{} }
func (m *SidecarInjectorConfig) String() string { return proto.CompactTextString(m) }
func (*SidecarInjectorConfig) ProtoMessage()    {}
func (*SidecarInjectorConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{37}
}
func (m *SidecarInjectorConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SidecarInjectorConfig.Unmarshal(m, b)
}
func (m *SidecarInjectorConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SidecarInjectorConfig.Marshal(b, m, deterministic)
}
func (m *SidecarInjectorConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SidecarInjectorConfig.Merge(m, src)
}
func (m *SidecarInjectorConfig) XXX_Size() int {
	return xxx_messageInfo_SidecarInjectorConfig.Size(m)
}
func (m *SidecarInjectorConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SidecarInjectorConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SidecarInjectorConfig proto.InternalMessageInfo

func (m *SidecarInjectorConfig) GetEnableNamespacesByDefault() *protobuf.BoolValue {
	if m != nil {
		return m.EnableNamespacesByDefault
	}
	return nil
}

func (m *SidecarInjectorConfig) GetNeverInjectSelector() []map[string]interface{} {
	if m != nil {
		return m.NeverInjectSelector
	}
	return nil
}

func (m *SidecarInjectorConfig) GetAlwaysInjectSelector() []map[string]interface{} {
	if m != nil {
		return m.AlwaysInjectSelector
	}
	return nil
}

func (m *SidecarInjectorConfig) GetRewriteAppHTTPProbe() *protobuf.BoolValue {
	if m != nil {
		return m.RewriteAppHTTPProbe
	}
	return nil
}

func (m *SidecarInjectorConfig) GetInjectLabel() string {
	if m != nil {
		return m.InjectLabel
	}
	return ""
}

func (m *SidecarInjectorConfig) GetInjectedAnnotations() map[string]interface{} {
	if m != nil {
		return m.InjectedAnnotations
	}
	return nil
}

func (m *SidecarInjectorConfig) GetObjectSelector() map[string]interface{} {
	if m != nil {
		return m.ObjectSelector
	}
	return nil
}

func (m *SidecarInjectorConfig) GetInjectionURL() string {
	if m != nil {
		return m.InjectionURL
	}
	return ""
}

// Configuration for each of the supported tracers.
type TracerConfig struct {
	// Configuration for the datadog tracing service.
	Datadog *TracerDatadogConfig `protobuf:"bytes,1,opt,name=datadog,proto3" json:"datadog,omitempty"`
	// Configuration for the lightstep tracing service.
	Lightstep *TracerLightStepConfig `protobuf:"bytes,2,opt,name=lightstep,proto3" json:"lightstep,omitempty"`
	// Configuration for the zipkin tracing service.
	Zipkin *TracerZipkinConfig `protobuf:"bytes,3,opt,name=zipkin,proto3" json:"zipkin,omitempty"`
	// Configuration for the stackdriver tracing service.
	Stackdriver          *TracerStackdriverConfig `protobuf:"bytes,4,opt,name=stackdriver,proto3" json:"stackdriver,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TracerConfig) Reset()         { *m = TracerConfig{} }
func (m *TracerConfig) String() string { return proto.CompactTextString(m) }
func (*TracerConfig) ProtoMessage()    {}
func (*TracerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{38}
}
func (m *TracerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracerConfig.Unmarshal(m, b)
}
func (m *TracerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracerConfig.Marshal(b, m, deterministic)
}
func (m *TracerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracerConfig.Merge(m, src)
}
func (m *TracerConfig) XXX_Size() int {
	return xxx_messageInfo_TracerConfig.Size(m)
}
func (m *TracerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracerConfig proto.InternalMessageInfo

func (m *TracerConfig) GetDatadog() *TracerDatadogConfig {
	if m != nil {
		return m.Datadog
	}
	return nil
}

func (m *TracerConfig) GetLightstep() *TracerLightStepConfig {
	if m != nil {
		return m.Lightstep
	}
	return nil
}

func (m *TracerConfig) GetZipkin() *TracerZipkinConfig {
	if m != nil {
		return m.Zipkin
	}
	return nil
}

func (m *TracerConfig) GetStackdriver() *TracerStackdriverConfig {
	if m != nil {
		return m.Stackdriver
	}
	return nil
}

// Configuration for the datadog tracing service.
type TracerDatadogConfig struct {
	// Address in host:port format for reporting trace data to the Datadog agent.
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracerDatadogConfig) Reset()         { *m = TracerDatadogConfig{} }
func (m *TracerDatadogConfig) String() string { return proto.CompactTextString(m) }
func (*TracerDatadogConfig) ProtoMessage()    {}
func (*TracerDatadogConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{39}
}
func (m *TracerDatadogConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracerDatadogConfig.Unmarshal(m, b)
}
func (m *TracerDatadogConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracerDatadogConfig.Marshal(b, m, deterministic)
}
func (m *TracerDatadogConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracerDatadogConfig.Merge(m, src)
}
func (m *TracerDatadogConfig) XXX_Size() int {
	return xxx_messageInfo_TracerDatadogConfig.Size(m)
}
func (m *TracerDatadogConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracerDatadogConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracerDatadogConfig proto.InternalMessageInfo

func (m *TracerDatadogConfig) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// Configuration for the lightstep tracing service.
type TracerLightStepConfig struct {
	// Sets the lightstep satellite pool address in host:port format for reporting trace data.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Sets the lightstep access token.
	AccessToken          string   `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracerLightStepConfig) Reset()         { *m = TracerLightStepConfig{} }
func (m *TracerLightStepConfig) String() string { return proto.CompactTextString(m) }
func (*TracerLightStepConfig) ProtoMessage()    {}
func (*TracerLightStepConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{40}
}
func (m *TracerLightStepConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracerLightStepConfig.Unmarshal(m, b)
}
func (m *TracerLightStepConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracerLightStepConfig.Marshal(b, m, deterministic)
}
func (m *TracerLightStepConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracerLightStepConfig.Merge(m, src)
}
func (m *TracerLightStepConfig) XXX_Size() int {
	return xxx_messageInfo_TracerLightStepConfig.Size(m)
}
func (m *TracerLightStepConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracerLightStepConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracerLightStepConfig proto.InternalMessageInfo

func (m *TracerLightStepConfig) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TracerLightStepConfig) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

// Configuration for the zipkin tracing service.
type TracerZipkinConfig struct {
	// Address of zipkin instance in host:port format for reporting trace data.
	//
	// Example: <zipkin-collector-service>.<zipkin-collector-namespace>:941
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracerZipkinConfig) Reset()         { *m = TracerZipkinConfig{} }
func (m *TracerZipkinConfig) String() string { return proto.CompactTextString(m) }
func (*TracerZipkinConfig) ProtoMessage()    {}
func (*TracerZipkinConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{41}
}
func (m *TracerZipkinConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracerZipkinConfig.Unmarshal(m, b)
}
func (m *TracerZipkinConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracerZipkinConfig.Marshal(b, m, deterministic)
}
func (m *TracerZipkinConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracerZipkinConfig.Merge(m, src)
}
func (m *TracerZipkinConfig) XXX_Size() int {
	return xxx_messageInfo_TracerZipkinConfig.Size(m)
}
func (m *TracerZipkinConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracerZipkinConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracerZipkinConfig proto.InternalMessageInfo

func (m *TracerZipkinConfig) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// Configuration for the stackdriver tracing service.
type TracerStackdriverConfig struct {
	// enables trace output to stdout.
	Debug *protobuf.BoolValue `protobuf:"bytes,1,opt,name=debug,proto3" json:"debug,omitempty"`
	// The global default max number of attributes per span.
	MaxNumberOfAttributes uint32 `protobuf:"varint,2,opt,name=maxNumberOfAttributes,proto3" json:"maxNumberOfAttributes,omitempty"`
	// The global default max number of annotation events per span.
	MaxNumberOfAnnotations uint32 `protobuf:"varint,3,opt,name=maxNumberOfAnnotations,proto3" json:"maxNumberOfAnnotations,omitempty"`
	// The global default max number of message events per span.
	MaxNumberOfMessageEvents uint32   `protobuf:"varint,4,opt,name=maxNumberOfMessageEvents,proto3" json:"maxNumberOfMessageEvents,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *TracerStackdriverConfig) Reset()         { *m = TracerStackdriverConfig{} }
func (m *TracerStackdriverConfig) String() string { return proto.CompactTextString(m) }
func (*TracerStackdriverConfig) ProtoMessage()    {}
func (*TracerStackdriverConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{42}
}
func (m *TracerStackdriverConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracerStackdriverConfig.Unmarshal(m, b)
}
func (m *TracerStackdriverConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracerStackdriverConfig.Marshal(b, m, deterministic)
}
func (m *TracerStackdriverConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracerStackdriverConfig.Merge(m, src)
}
func (m *TracerStackdriverConfig) XXX_Size() int {
	return xxx_messageInfo_TracerStackdriverConfig.Size(m)
}
func (m *TracerStackdriverConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TracerStackdriverConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TracerStackdriverConfig proto.InternalMessageInfo

func (m *TracerStackdriverConfig) GetDebug() *protobuf.BoolValue {
	if m != nil {
		return m.Debug
	}
	return nil
}

func (m *TracerStackdriverConfig) GetMaxNumberOfAttributes() uint32 {
	if m != nil {
		return m.MaxNumberOfAttributes
	}
	return 0
}

func (m *TracerStackdriverConfig) GetMaxNumberOfAnnotations() uint32 {
	if m != nil {
		return m.MaxNumberOfAnnotations
	}
	return 0
}

func (m *TracerStackdriverConfig) GetMaxNumberOfMessageEvents() uint32 {
	if m != nil {
		return m.MaxNumberOfMessageEvents
	}
	return 0
}

type BaseConfig struct {
	// For Helm2 use, adds the CRDs to templates.
	EnableCRDTemplates *protobuf.BoolValue `protobuf:"bytes,1,opt,name=enableCRDTemplates,proto3" json:"enableCRDTemplates,omitempty"`
	// URL to use for validating webhook.
	ValidationURL        string   `protobuf:"bytes,2,opt,name=validationURL,proto3" json:"validationURL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseConfig) Reset()         { *m = BaseConfig{} }
func (m *BaseConfig) String() string { return proto.CompactTextString(m) }
func (*BaseConfig) ProtoMessage()    {}
func (*BaseConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{43}
}
func (m *BaseConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseConfig.Unmarshal(m, b)
}
func (m *BaseConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseConfig.Marshal(b, m, deterministic)
}
func (m *BaseConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseConfig.Merge(m, src)
}
func (m *BaseConfig) XXX_Size() int {
	return xxx_messageInfo_BaseConfig.Size(m)
}
func (m *BaseConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseConfig.DiscardUnknown(m)
}

var xxx_messageInfo_BaseConfig proto.InternalMessageInfo

func (m *BaseConfig) GetEnableCRDTemplates() *protobuf.BoolValue {
	if m != nil {
		return m.EnableCRDTemplates
	}
	return nil
}

func (m *BaseConfig) GetValidationURL() string {
	if m != nil {
		return m.ValidationURL
	}
	return ""
}

type IstiodRemoteConfig struct {
	// URL to use for sidecar injector webhook.
	InjectionURL         string   `protobuf:"bytes,1,opt,name=injectionURL,proto3" json:"injectionURL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IstiodRemoteConfig) Reset()         { *m = IstiodRemoteConfig{} }
func (m *IstiodRemoteConfig) String() string { return proto.CompactTextString(m) }
func (*IstiodRemoteConfig) ProtoMessage()    {}
func (*IstiodRemoteConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{44}
}
func (m *IstiodRemoteConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IstiodRemoteConfig.Unmarshal(m, b)
}
func (m *IstiodRemoteConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IstiodRemoteConfig.Marshal(b, m, deterministic)
}
func (m *IstiodRemoteConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IstiodRemoteConfig.Merge(m, src)
}
func (m *IstiodRemoteConfig) XXX_Size() int {
	return xxx_messageInfo_IstiodRemoteConfig.Size(m)
}
func (m *IstiodRemoteConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_IstiodRemoteConfig.DiscardUnknown(m)
}

var xxx_messageInfo_IstiodRemoteConfig proto.InternalMessageInfo

func (m *IstiodRemoteConfig) GetInjectionURL() string {
	if m != nil {
		return m.InjectionURL
	}
	return ""
}

type Values struct {
	Cni          *CNIConfig      `protobuf:"bytes,2,opt,name=cni,proto3" json:"cni,omitempty"`
	Istiocoredns *CoreDNSConfig  `protobuf:"bytes,3,opt,name=istiocoredns,proto3" json:"istiocoredns,omitempty"`
	Gateways     *GatewaysConfig `protobuf:"bytes,5,opt,name=gateways,proto3" json:"gateways,omitempty"`
	Global       *GlobalConfig   `protobuf:"bytes,6,opt,name=global,proto3" json:"global,omitempty"`
	Pilot        *PilotConfig    `protobuf:"bytes,10,opt,name=pilot,proto3" json:"pilot,omitempty"`
	// Controls whether telemetry is exported for Pilot.
	Telemetry              *TelemetryConfig       `protobuf:"bytes,23,opt,name=telemetry,proto3" json:"telemetry,omitempty"`
	SidecarInjectorWebhook *SidecarInjectorConfig `protobuf:"bytes,13,opt,name=sidecarInjectorWebhook,proto3" json:"sidecarInjectorWebhook,omitempty"`
	ClusterResources       *protobuf.BoolValue    `protobuf:"bytes,17,opt,name=clusterResources,proto3" json:"clusterResources,omitempty"`
	IstioCni               *CNIConfig             `protobuf:"bytes,19,opt,name=istio_cni,json=istioCni,proto3" json:"istio_cni,omitempty"`
	Revision               string                 `protobuf:"bytes,21,opt,name=revision,proto3" json:"revision,omitempty"`
	// TODO can this import the real mesh config API?
	MeshConfig           interface{}      `protobuf:"bytes,36,opt,name=meshConfig,proto3" json:"meshConfig,omitempty"`
	Base                 *BaseConfig         `protobuf:"bytes,37,opt,name=base,proto3" json:"base,omitempty"`
	IstiodRemote         *IstiodRemoteConfig `protobuf:"bytes,38,opt,name=istiodRemote,proto3" json:"istiodRemote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Values) Reset()         { *m = Values{} }
func (m *Values) String() string { return proto.CompactTextString(m) }
func (*Values) ProtoMessage()    {}
func (*Values) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{45}
}
func (m *Values) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Values.Unmarshal(m, b)
}
func (m *Values) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Values.Marshal(b, m, deterministic)
}
func (m *Values) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Values.Merge(m, src)
}
func (m *Values) XXX_Size() int {
	return xxx_messageInfo_Values.Size(m)
}
func (m *Values) XXX_DiscardUnknown() {
	xxx_messageInfo_Values.DiscardUnknown(m)
}

var xxx_messageInfo_Values proto.InternalMessageInfo

func (m *Values) GetCni() *CNIConfig {
	if m != nil {
		return m.Cni
	}
	return nil
}

func (m *Values) GetIstiocoredns() *CoreDNSConfig {
	if m != nil {
		return m.Istiocoredns
	}
	return nil
}

func (m *Values) GetGateways() *GatewaysConfig {
	if m != nil {
		return m.Gateways
	}
	return nil
}

func (m *Values) GetGlobal() *GlobalConfig {
	if m != nil {
		return m.Global
	}
	return nil
}

func (m *Values) GetPilot() *PilotConfig {
	if m != nil {
		return m.Pilot
	}
	return nil
}

func (m *Values) GetTelemetry() *TelemetryConfig {
	if m != nil {
		return m.Telemetry
	}
	return nil
}

func (m *Values) GetSidecarInjectorWebhook() *SidecarInjectorConfig {
	if m != nil {
		return m.SidecarInjectorWebhook
	}
	return nil
}

func (m *Values) GetClusterResources() *protobuf.BoolValue {
	if m != nil {
		return m.ClusterResources
	}
	return nil
}

func (m *Values) GetIstioCni() *CNIConfig {
	if m != nil {
		return m.IstioCni
	}
	return nil
}

func (m *Values) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

func (m *Values) GetMeshConfig() interface{} {
	if m != nil {
		return m.MeshConfig
	}
	return nil
}

func (m *Values) GetBase() *BaseConfig {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *Values) GetIstiodRemote() *IstiodRemoteConfig {
	if m != nil {
		return m.IstiodRemote
	}
	return nil
}





// ZeroVPNConfig enables cross-cluster access using SNI matching.
type ZeroVPNConfig struct {
	// Controls whether ZeroVPN is enabled.
	Enabled              *protobuf.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Suffix               string              `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ZeroVPNConfig) Reset()         { *m = ZeroVPNConfig{} }
func (m *ZeroVPNConfig) String() string { return proto.CompactTextString(m) }
func (*ZeroVPNConfig) ProtoMessage()    {}
func (*ZeroVPNConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_261260e22432516f, []int{50}
}
func (m *ZeroVPNConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZeroVPNConfig.Unmarshal(m, b)
}
func (m *ZeroVPNConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZeroVPNConfig.Marshal(b, m, deterministic)
}
func (m *ZeroVPNConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZeroVPNConfig.Merge(m, src)
}
func (m *ZeroVPNConfig) XXX_Size() int {
	return xxx_messageInfo_ZeroVPNConfig.Size(m)
}
func (m *ZeroVPNConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ZeroVPNConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ZeroVPNConfig proto.InternalMessageInfo

func (m *ZeroVPNConfig) GetEnabled() *protobuf.BoolValue {
	if m != nil {
		return m.Enabled
	}
	return nil
}

func (m *ZeroVPNConfig) GetSuffix() string {
	if m != nil {
		return m.Suffix
	}
	return ""
}


func init() {
	proto.RegisterEnum("v1alpha1.IngressControllerMode", IngressControllerMode_name, IngressControllerMode_value)
	proto.RegisterEnum("v1alpha1.Tracer", Tracer_name, Tracer_value)
	proto.RegisterEnum("v1alpha1.OutboundTrafficPolicyConfig_Mode", OutboundTrafficPolicyConfig_Mode_name, OutboundTrafficPolicyConfig_Mode_value)
	proto.RegisterType((*ArchConfig)(nil), "v1alpha1.ArchConfig")
	proto.RegisterType((*CNIConfig)(nil), "v1alpha1.CNIConfig")
	proto.RegisterType((*CNIRepairConfig)(nil), "v1alpha1.CNIRepairConfig")
	proto.RegisterType((*CPUTargetUtilizationConfig)(nil), "v1alpha1.CPUTargetUtilizationConfig")
	proto.RegisterType((*Resources)(nil), "v1alpha1.Resources")
	proto.RegisterMapType((map[string]string)(nil), "v1alpha1.Resources.LimitsEntry")
	proto.RegisterMapType((map[string]string)(nil), "v1alpha1.Resources.RequestsEntry")
	proto.RegisterType((*CoreDNSConfig)(nil), "v1alpha1.CoreDNSConfig")
	proto.RegisterType((*DefaultPodDisruptionBudgetConfig)(nil), "v1alpha1.DefaultPodDisruptionBudgetConfig")
	proto.RegisterType((*DefaultResourcesConfig)(nil), "v1alpha1.DefaultResourcesConfig")
	proto.RegisterType((*EgressGatewayConfig)(nil), "v1alpha1.EgressGatewayConfig")
	proto.RegisterType((*GatewayLabelsConfig)(nil), "v1alpha1.GatewayLabelsConfig")
	proto.RegisterType((*GatewaysConfig)(nil), "v1alpha1.GatewaysConfig")
	proto.RegisterType((*GlobalConfig)(nil), "v1alpha1.GlobalConfig")
	proto.RegisterType((*STSConfig)(nil), "v1alpha1.STSConfig")
	proto.RegisterType((*IstiodConfig)(nil), "v1alpha1.IstiodConfig")
	proto.RegisterType((*GlobalLoggingConfig)(nil), "v1alpha1.GlobalLoggingConfig")
	proto.RegisterType((*IngressGatewayConfig)(nil), "v1alpha1.IngressGatewayConfig")
	proto.RegisterType((*IngressGatewayZvpnConfig)(nil), "v1alpha1.IngressGatewayZvpnConfig")
	proto.RegisterType((*MeshExpansionConfig)(nil), "v1alpha1.MeshExpansionConfig")
	proto.RegisterType((*MultiClusterConfig)(nil), "v1alpha1.MultiClusterConfig")
	proto.RegisterType((*OutboundTrafficPolicyConfig)(nil), "v1alpha1.OutboundTrafficPolicyConfig")
	proto.RegisterType((*PilotConfig)(nil), "v1alpha1.PilotConfig")
	proto.RegisterType((*PilotIngressConfig)(nil), "v1alpha1.PilotIngressConfig")
	proto.RegisterType((*PilotPolicyConfig)(nil), "v1alpha1.PilotPolicyConfig")
	proto.RegisterType((*TelemetryConfig)(nil), "v1alpha1.TelemetryConfig")
	proto.RegisterType((*TelemetryV2Config)(nil), "v1alpha1.TelemetryV2Config")
	proto.RegisterType((*TelemetryV2MetadataExchangeConfig)(nil), "v1alpha1.TelemetryV2MetadataExchangeConfig")
	proto.RegisterType((*TelemetryV2PrometheusConfig)(nil), "v1alpha1.TelemetryV2PrometheusConfig")
	proto.RegisterType((*TelemetryV2StackDriverConfig)(nil), "v1alpha1.TelemetryV2StackDriverConfig")
	proto.RegisterType((*TelemetryV2AccessLogPolicyFilterConfig)(nil), "v1alpha1.TelemetryV2AccessLogPolicyFilterConfig")
	proto.RegisterType((*PilotConfigSource)(nil), "v1alpha1.PilotConfigSource")
	proto.RegisterType((*PortsConfig)(nil), "v1alpha1.PortsConfig")
	proto.RegisterType((*ProxyConfig)(nil), "v1alpha1.ProxyConfig")
	proto.RegisterType((*ProxyInitConfig)(nil), "v1alpha1.ProxyInitConfig")
	proto.RegisterType((*ResourcesRequestsConfig)(nil), "v1alpha1.ResourcesRequestsConfig")
	proto.RegisterType((*SDSConfig)(nil), "v1alpha1.SDSConfig")
	proto.RegisterType((*SecretVolume)(nil), "v1alpha1.SecretVolume")
	proto.RegisterType((*ServiceConfig)(nil), "v1alpha1.ServiceConfig")
	proto.RegisterType((*SidecarInjectorConfig)(nil), "v1alpha1.SidecarInjectorConfig")
	proto.RegisterType((*TracerConfig)(nil), "v1alpha1.TracerConfig")
	proto.RegisterType((*TracerDatadogConfig)(nil), "v1alpha1.TracerDatadogConfig")
	proto.RegisterType((*TracerLightStepConfig)(nil), "v1alpha1.TracerLightStepConfig")
	proto.RegisterType((*TracerZipkinConfig)(nil), "v1alpha1.TracerZipkinConfig")
	proto.RegisterType((*TracerStackdriverConfig)(nil), "v1alpha1.TracerStackdriverConfig")
	proto.RegisterType((*BaseConfig)(nil), "v1alpha1.BaseConfig")
	proto.RegisterType((*IstiodRemoteConfig)(nil), "v1alpha1.IstiodRemoteConfig")
	proto.RegisterType((*Values)(nil), "v1alpha1.Values")
	proto.RegisterType((*ZeroVPNConfig)(nil), "v1alpha1.ZeroVPNConfig")
}

func init() {
	proto.RegisterFile("pkg/apis/istio/v1alpha1/values_types.proto", fileDescriptor_261260e22432516f)
}

var fileDescriptor_261260e22432516f = []byte{
	// 4519 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x3c, 0x4b, 0x73, 0x1b, 0x47,
	0x7a, 0x02, 0x9f, 0xc2, 0x07, 0x80, 0x04, 0x9b, 0x0f, 0x8d, 0x68, 0x5a, 0xa2, 0x67, 0x6d, 0x2d,
	0xd7, 0xf2, 0x52, 0x32, 0x2d, 0x4b, 0xb6, 0xfc, 0x88, 0xf9, 0x92, 0x4d, 0x2f, 0x49, 0x21, 0x03,
	0x4a, 0x7e, 0x6c, 0xb2, 0x4a, 0x73, 0xa6, 0x09, 0xb6, 0x35, 0x98, 0x9e, 0x9d, 0x69, 0x80, 0xa4,
	0x0f, 0x49, 0xe5, 0x94, 0xdb, 0x56, 0x25, 0x7f, 0x20, 0x97, 0x54, 0xa5, 0x2a, 0x7f, 0x20, 0x3f,
	0x21, 0x39, 0xa4, 0x52, 0xb9, 0x6f, 0xa5, 0x2a, 0xe5, 0x5b, 0x7e, 0x40, 0x2a, 0x87, 0x5c, 0x52,
	0xfd, 0x98, 0x27, 0x06, 0x04, 0x48, 0x4a, 0xb5, 0xa9, 0xdc, 0x30, 0xdf, 0xab, 0x7b, 0xba, 0xbf,
	0xfe, 0x5e, 0xfd, 0x0d, 0xe0, 0x5d, 0xff, 0x65, 0xeb, 0x1e, 0xf6, 0x69, 0x78, 0x8f, 0x86, 0x9c,
	0xb2, 0x7b, 0xdd, 0xf7, 0xb1, 0xeb, 0x1f, 0xe3, 0xf7, 0xef, 0x75, 0xb1, 0xdb, 0x21, 0xe1, 0x0b,
	0x7e, 0xe6, 0x93, 0x70, 0xd5, 0x0f, 0x18, 0x67, 0xe8, 0x7a, 0x84, 0x5c, 0xbc, 0xd5, 0x62, 0xac,
	0xe5, 0x92, 0x7b, 0x12, 0x7e, 0xd8, 0x39, 0xba, 0xe7, 0x74, 0x02, 0xcc, 0x29, 0xf3, 0x14, 0xe5,
	0xe2, 0x17, 0x2d, 0xca, 0x8f, 0x3b, 0x87, 0xab, 0x36, 0x6b, 0xdf, 0x6b, 0xb1, 0x16, 0x4b, 0x08,
	0xe3, 0x1f, 0x79, 0x09, 0x27, 0x01, 0xf6, 0x7d, 0x12, 0xe8, 0xb1, 0x16, 0xe7, 0x04, 0x9b, 0xfc,
	0x29, 0x05, 0x28, 0xa8, 0x69, 0x01, 0xac, 0x07, 0xf6, 0xf1, 0x26, 0xf3, 0x8e, 0x68, 0x0b, 0xcd,
	0xc1, 0x38, 0x6e, 0x3b, 0x0f, 0x1f, 0x18, 0xa5, 0xe5, 0xd2, 0x4a, 0xcd, 0x52, 0x0f, 0xc8, 0x80,
	0x49, 0xdf, 0xb7, 0x1f, 0x3e, 0x70, 0x89, 0x31, 0x22, 0xe1, 0xd1, 0xa3, 0xa0, 0x0f, 0x3f, 0xf8,
	0xf8, 0xfe, 0xa9, 0x31, 0xaa, 0xe8, 0xe5, 0x83, 0xf9, 0x4f, 0x63, 0x50, 0xde, 0xdc, 0xdf, 0xd1,
	0x32, 0x1f, 0xc0, 0x24, 0xf1, 0xf0, 0xa1, 0x4b, 0x1c, 0x29, 0xb5, 0xb2, 0xb6, 0xb8, 0xaa, 0x66,
	0xba, 0x1a, 0xcd, 0x74, 0x75, 0x83, 0x31, 0xf7, 0xb9, 0x58, 0x1d, 0x2b, 0x22, 0x45, 0x75, 0x18,
	0x3d, 0xee, 0x1c, 0xca, 0xf1, 0xca, 0x96, 0xf8, 0x89, 0x7e, 0x01, 0xa3, 0x1c, 0xb7, 0xe4, 0x48,
	0x95, 0xb5, 0x1b, 0xab, 0xd1, 0xca, 0xad, 0x1e, 0x9c, 0xf9, 0x64, 0xc7, 0xe3, 0x24, 0x38, 0xc2,
	0x36, 0xb1, 0x04, 0x8d, 0x98, 0x16, 0x6d, 0xe3, 0x16, 0x31, 0xc6, 0x24, 0xbb, 0x7a, 0x40, 0xb7,
	0x00, 0xfc, 0x8e, 0xeb, 0x36, 0x98, 0x4b, 0xed, 0x33, 0x63, 0x5c, 0xa2, 0x52, 0x10, 0xb4, 0x04,
	0x65, 0xdb, 0xa3, 0x1b, 0xd4, 0xdb, 0xa2, 0x81, 0x31, 0x21, 0xd1, 0x09, 0x40, 0x70, 0xdb, 0x1e,
	0x15, 0xef, 0x24, 0xd0, 0x93, 0x8a, 0x3b, 0x81, 0xa0, 0x15, 0x98, 0xd6, 0x4f, 0x4f, 0xa8, 0x4b,
	0xf6, 0x71, 0x9b, 0x18, 0xd7, 0x25, 0x51, 0x1e, 0x8c, 0xde, 0x83, 0x19, 0x72, 0x6a, 0xbb, 0x1d,
	0x47, 0x3e, 0x86, 0x3e, 0xb6, 0x49, 0x68, 0x94, 0x97, 0x47, 0x57, 0xca, 0x56, 0x2f, 0x02, 0xed,
	0xc2, 0x94, 0xcf, 0x9c, 0x75, 0xcf, 0x63, 0x5c, 0xea, 0x43, 0x68, 0x80, 0x5c, 0x81, 0xe5, 0xec,
	0x0a, 0xec, 0x61, 0xbf, 0xc9, 0x03, 0xea, 0xb5, 0xe2, 0xa5, 0xd8, 0x18, 0x31, 0x4a, 0x56, 0x8e,
	0x17, 0xad, 0x40, 0xdd, 0x0f, 0xfd, 0x17, 0xb6, 0xdb, 0x09, 0x39, 0x09, 0x5e, 0x04, 0xcc, 0x25,
	0x46, 0x45, 0x4e, 0x73, 0xca, 0x0f, 0xfd, 0x4d, 0x05, 0xb6, 0x98, 0x4b, 0xd0, 0x22, 0x5c, 0x77,
	0x59, 0x6b, 0x97, 0x74, 0x89, 0x6b, 0x54, 0x25, 0x45, 0xfc, 0x8c, 0xde, 0x87, 0x89, 0x80, 0xf8,
	0x98, 0x06, 0x46, 0x4d, 0xce, 0xe5, 0x66, 0x32, 0x97, 0xcd, 0xfd, 0x1d, 0x4b, 0xa2, 0xd4, 0xee,
	0x5b, 0x9a, 0x50, 0x68, 0x81, 0x7d, 0x8c, 0xa9, 0x47, 0x1c, 0x63, 0x6a, 0xb0, 0x16, 0x68, 0x52,
	0xf3, 0x77, 0xa3, 0x30, 0x9d, 0x93, 0xf8, 0x7f, 0x47, 0x9f, 0x96, 0xa0, 0xec, 0xe2, 0x43, 0xe2,
	0x36, 0x98, 0x13, 0x4a, 0x75, 0xba, 0x6e, 0x25, 0x00, 0x74, 0x07, 0xaa, 0x76, 0x40, 0x30, 0x27,
	0xdb, 0x5d, 0xe2, 0xf1, 0x50, 0x29, 0x94, 0xdc, 0x93, 0x0c, 0x5c, 0xe8, 0x95, 0x43, 0x5c, 0xc2,
	0x89, 0x14, 0x33, 0x29, 0xc5, 0xa4, 0x20, 0x42, 0x5b, 0x0e, 0x03, 0xf6, 0x92, 0x78, 0x0d, 0xe6,
	0xec, 0x0a, 0xe9, 0xbf, 0x22, 0x67, 0x5a, 0xb3, 0x7a, 0x11, 0xe8, 0x3e, 0xcc, 0x66, 0x81, 0x72,
	0x19, 0x8c, 0xb2, 0xa4, 0x2f, 0x42, 0x09, 0xf9, 0xd4, 0xa3, 0x7c, 0x93, 0x79, 0x5c, 0xac, 0x79,
	0x20, 0x35, 0x17, 0x94, 0xfc, 0x1e, 0x84, 0xf9, 0x2d, 0x2c, 0x6e, 0x36, 0x9e, 0x1d, 0xe0, 0xa0,
	0x45, 0xf8, 0x33, 0x4e, 0x5d, 0xfa, 0xa3, 0x54, 0x2c, 0xbd, 0x35, 0x8f, 0xc1, 0xe0, 0x12, 0xb5,
	0xde, 0x25, 0x01, 0x6e, 0x91, 0x14, 0x85, 0xdc, 0xab, 0x71, 0xab, 0x2f, 0xde, 0xfc, 0x9f, 0x12,
	0x94, 0x2d, 0x12, 0xb2, 0x4e, 0x20, 0xb4, 0xfe, 0x11, 0x4c, 0xb8, 0xb4, 0x4d, 0x79, 0x68, 0x94,
	0x96, 0x47, 0x57, 0x2a, 0x6b, 0xb7, 0x93, 0xfd, 0x89, 0x89, 0x56, 0x77, 0x25, 0xc5, 0xb6, 0xc7,
	0x83, 0x33, 0x4b, 0x93, 0xa3, 0xcf, 0xe0, 0x7a, 0x40, 0x7e, 0xdb, 0x21, 0x21, 0x0f, 0x8d, 0x11,
	0xc9, 0xfa, 0x56, 0x11, 0xab, 0xa5, 0x69, 0x14, 0x73, 0xcc, 0xb2, 0xf8, 0x31, 0x54, 0x52, 0x52,
	0x85, 0xd6, 0xbc, 0x24, 0x67, 0x72, 0xee, 0x65, 0x4b, 0xfc, 0x14, 0xaa, 0x20, 0xed, 0xb8, 0xd6,
	0x24, 0xf5, 0xf0, 0x78, 0xe4, 0xa3, 0xd2, 0xe2, 0x27, 0x50, 0xcb, 0x48, 0xbd, 0x08, 0xb3, 0xf9,
	0xef, 0xd7, 0xa1, 0xb6, 0xc9, 0x02, 0xb2, 0xb5, 0xdf, 0xbc, 0x92, 0x9a, 0x9b, 0x50, 0xb5, 0x95,
	0x98, 0x1d, 0xa9, 0xb0, 0x6a, 0xa0, 0x0c, 0x4c, 0x5a, 0x32, 0xf5, 0x7c, 0xa0, 0xf5, 0x5f, 0x58,
	0xb2, 0x18, 0x82, 0x56, 0x01, 0xe9, 0xa7, 0x86, 0xdb, 0x69, 0x51, 0x6f, 0x27, 0xa5, 0xfa, 0x05,
	0x18, 0xf4, 0x15, 0x54, 0x3d, 0xe6, 0x90, 0x26, 0x71, 0x89, 0xcd, 0x59, 0x20, 0x8f, 0xc2, 0xb0,
	0xf6, 0x29, 0xc3, 0x29, 0xce, 0x4c, 0x40, 0x7c, 0x97, 0xda, 0x78, 0x93, 0x75, 0x3c, 0x2e, 0xcf,
	0x4c, 0x4d, 0xd1, 0xa5, 0xe1, 0x05, 0x36, 0x71, 0xf2, 0x0a, 0x36, 0xf1, 0x43, 0x28, 0x07, 0x91,
	0x62, 0xc8, 0x93, 0x55, 0x59, 0x9b, 0x2d, 0xd0, 0x19, 0xc9, 0x9b, 0x50, 0xa2, 0x5d, 0x98, 0x0e,
	0x98, 0xeb, 0x52, 0xaf, 0xb5, 0x87, 0x4f, 0x9b, 0x9d, 0xa0, 0xa5, 0x8e, 0x59, 0x65, 0xed, 0x56,
	0x8f, 0x2d, 0x79, 0x1a, 0xa8, 0x79, 0x3c, 0x61, 0x41, 0x63, 0x43, 0xca, 0xc9, 0xb3, 0xa2, 0x6f,
	0x61, 0x3e, 0x01, 0x3d, 0xf3, 0x70, 0x17, 0x53, 0x57, 0x6c, 0xa9, 0xb6, 0xf6, 0xc3, 0xc8, 0x2c,
	0x16, 0x80, 0x18, 0x2c, 0xc9, 0x17, 0xe6, 0x74, 0xfd, 0xe8, 0x48, 0x9c, 0xe8, 0x33, 0x79, 0xfa,
	0xe3, 0xed, 0xaa, 0xc8, 0x01, 0x7e, 0x9e, 0x1d, 0xa0, 0xe9, 0x52, 0x9b, 0x3c, 0x3d, 0xea, 0xb3,
	0x82, 0xe7, 0x0a, 0x44, 0x27, 0xb0, 0x9c, 0xc3, 0x1f, 0x90, 0xa0, 0x9d, 0x1d, 0xb4, 0x7a, 0xf1,
	0x41, 0x07, 0x0a, 0x45, 0x7b, 0x50, 0xe1, 0xcc, 0x25, 0x81, 0xd6, 0x89, 0xda, 0xc5, 0xc7, 0x48,
	0xf3, 0xa3, 0x27, 0x50, 0xc7, 0x1d, 0xce, 0x42, 0x1b, 0xbb, 0x64, 0x5b, 0x1f, 0xc5, 0xc1, 0xbe,
	0xab, 0x87, 0x47, 0x9c, 0xc9, 0x18, 0xb6, 0x87, 0x4f, 0x8d, 0x69, 0x19, 0x2b, 0x65, 0x60, 0x59,
	0x1a, 0xea, 0x19, 0xf5, 0x3c, 0x0d, 0xf5, 0xd0, 0x63, 0x18, 0xb5, 0xfd, 0x8e, 0x31, 0x23, 0xa7,
	0xf0, 0x76, 0xca, 0xe5, 0xf6, 0x35, 0xc8, 0xf2, 0x9d, 0x04, 0x93, 0xf9, 0x2d, 0x2c, 0x6f, 0x91,
	0x23, 0xdc, 0x71, 0x79, 0x83, 0x39, 0x5b, 0x34, 0x0c, 0x3a, 0xbe, 0x20, 0xdb, 0xe8, 0x38, 0x2d,
	0xc2, 0xaf, 0x62, 0x71, 0xcc, 0x6f, 0x60, 0x41, 0x4b, 0x8e, 0x4f, 0x8a, 0x96, 0x97, 0x36, 0xc5,
	0x4a, 0x60, 0x91, 0x29, 0x8e, 0x6c, 0xa6, 0x8e, 0x17, 0x62, 0x16, 0xf3, 0x1f, 0xaa, 0x30, 0xbb,
	0xdd, 0x0a, 0x48, 0x18, 0x7e, 0x89, 0x39, 0x39, 0xc1, 0x67, 0x5a, 0x6c, 0xd1, 0xb6, 0x94, 0x5e,
	0xc1, 0xb6, 0x8c, 0x0c, 0xb1, 0x2d, 0xa3, 0xfd, 0xb7, 0x65, 0xfc, 0x12, 0xdb, 0x92, 0x5e, 0xf2,
	0xc9, 0xe1, 0x8d, 0xfc, 0x1a, 0x8c, 0x12, 0xaf, 0xab, 0x4d, 0xd5, 0x40, 0x9b, 0x67, 0x09, 0x62,
	0xf4, 0x21, 0x4c, 0xc8, 0xd8, 0x24, 0xd4, 0x46, 0xea, 0xcd, 0x84, 0x4d, 0x2f, 0xaf, 0x3c, 0x4b,
	0xd1, 0x36, 0x68, 0x62, 0x84, 0x60, 0xcc, 0x13, 0x01, 0xc1, 0x4d, 0x69, 0xfd, 0xe5, 0xef, 0x1e,
	0x7b, 0x0f, 0x97, 0xb6, 0xf7, 0xbd, 0x76, 0xbc, 0x72, 0x05, 0x3b, 0x3e, 0xc8, 0xd0, 0x55, 0xff,
	0x10, 0x86, 0xae, 0xf6, 0x3a, 0x0c, 0xdd, 0x5d, 0x18, 0xf7, 0x59, 0xc0, 0x43, 0x63, 0x4a, 0x46,
	0x38, 0xf3, 0x89, 0xf4, 0x86, 0x00, 0xeb, 0x3d, 0x54, 0x34, 0x59, 0xf7, 0x36, 0x3d, 0xb4, 0x7b,
	0xfb, 0x14, 0x6a, 0x21, 0xb1, 0x03, 0xc2, 0x9f, 0x33, 0xb7, 0xd3, 0x26, 0xa1, 0x51, 0x97, 0x63,
	0x2d, 0x24, 0xac, 0xcd, 0x14, 0xda, 0xca, 0x12, 0xa3, 0x06, 0xa0, 0x90, 0x04, 0x5d, 0x6a, 0x93,
	0xf4, 0xee, 0xce, 0x0c, 0xa9, 0xb1, 0x05, 0xbc, 0x42, 0x13, 0x45, 0xe6, 0x6c, 0x20, 0xa5, 0x89,
	0xe2, 0x37, 0xba, 0x0b, 0x63, 0x3f, 0x76, 0x7d, 0xcf, 0x98, 0xcd, 0xc7, 0xf0, 0xdf, 0x93, 0x80,
	0x3d, 0x6f, 0xec, 0xeb, 0x85, 0x90, 0x44, 0x79, 0xef, 0x30, 0x77, 0x45, 0xef, 0x50, 0xe0, 0xfe,
	0xe7, 0x5f, 0x83, 0xfb, 0x5f, 0xb8, 0xaa, 0xfb, 0xdf, 0x83, 0x9a, 0x2d, 0x97, 0x21, 0xda, 0xc7,
	0x1b, 0x17, 0x7a, 0x71, 0x2b, 0xcb, 0x8d, 0x7e, 0x0d, 0x73, 0xd8, 0x71, 0xa8, 0x58, 0x03, 0xec,
	0xc6, 0xb9, 0x41, 0x68, 0x18, 0x17, 0x93, 0x5a, 0x28, 0x04, 0x7d, 0x04, 0xe5, 0xa0, 0xe3, 0xad,
	0x87, 0x16, 0x63, 0xdc, 0x58, 0x1c, 0x68, 0x10, 0x13, 0x62, 0xf3, 0x33, 0x98, 0x2d, 0x30, 0x63,
	0x22, 0x04, 0xc7, 0xbe, 0x1f, 0x85, 0xe0, 0xd8, 0xf7, 0x65, 0x2a, 0x17, 0x72, 0xca, 0xa2, 0x10,
	0x5c, 0x3e, 0x98, 0xff, 0x59, 0x82, 0x29, 0xcd, 0x1f, 0xb1, 0xee, 0xc3, 0xac, 0xc4, 0xbd, 0x20,
	0xd2, 0x07, 0xb5, 0x14, 0x56, 0x7b, 0x9a, 0x94, 0xf5, 0x2c, 0x70, 0x51, 0x16, 0x92, 0x9c, 0xdb,
	0x69, 0xc6, 0xb4, 0xa9, 0x1f, 0x19, 0xde, 0xd4, 0xff, 0x31, 0xcc, 0xa9, 0x59, 0x50, 0x2f, 0x33,
	0x8d, 0xb1, 0xbc, 0x5a, 0xec, 0x78, 0x05, 0xf3, 0x50, 0x6f, 0xb0, 0x93, 0x61, 0x35, 0xff, 0x6e,
	0x06, 0xaa, 0x5f, 0xba, 0xec, 0x50, 0xae, 0xbc, 0x78, 0xd3, 0x15, 0x18, 0xc3, 0x81, 0x7d, 0xac,
	0x5f, 0x6d, 0x2e, 0x91, 0x99, 0x14, 0x86, 0x2c, 0x49, 0x21, 0xb2, 0x4b, 0xa5, 0x0d, 0x62, 0xcd,
	0xe3, 0x1a, 0x85, 0xb1, 0xa6, 0xb2, 0xcb, 0x02, 0x94, 0x70, 0xd6, 0x5a, 0x7f, 0xb0, 0x4b, 0x1d,
	0x95, 0x09, 0x8e, 0x0e, 0x76, 0xd6, 0x79, 0x1e, 0xf4, 0x15, 0xdc, 0x76, 0x54, 0x94, 0xa1, 0x26,
	0xf4, 0x9c, 0x86, 0xf4, 0x90, 0xba, 0x94, 0x9f, 0x35, 0x09, 0xe7, 0xd4, 0x6b, 0x85, 0xc6, 0x03,
	0x59, 0x41, 0x19, 0x44, 0x86, 0x9e, 0xc3, 0xac, 0x26, 0xd9, 0x4f, 0x3b, 0xb1, 0x89, 0x0b, 0x38,
	0x9e, 0x22, 0x01, 0xc8, 0x83, 0x45, 0xa7, 0x6f, 0x84, 0xa5, 0xbd, 0xfb, 0xbb, 0x89, 0xf8, 0x41,
	0xd1, 0x98, 0x1c, 0xe8, 0x1c, 0x89, 0xa8, 0x01, 0x75, 0x27, 0x17, 0x77, 0x69, 0xd7, 0xbe, 0xdc,
	0x33, 0x4a, 0x2e, 0x32, 0x93, 0xb2, 0x7b, 0xb8, 0xd1, 0xaf, 0x01, 0x69, 0xd8, 0x41, 0xca, 0x4e,
	0x3e, 0xba, 0xb8, 0x9d, 0x2c, 0x10, 0x13, 0xd5, 0x5f, 0xaa, 0x49, 0xfd, 0x65, 0x05, 0xa6, 0x65,
	0x1d, 0xa5, 0x91, 0xd4, 0xe4, 0x6a, 0xaa, 0x60, 0x96, 0x03, 0xa3, 0x77, 0xa1, 0x1e, 0x83, 0x94,
	0xd3, 0x09, 0x8d, 0x77, 0xe4, 0x6e, 0xf7, 0xc0, 0xd1, 0x1d, 0x98, 0x92, 0x4a, 0x9f, 0x68, 0xe7,
	0x94, 0x2a, 0x6f, 0x65, 0xa1, 0xc2, 0xd4, 0xb8, 0xac, 0xb5, 0x1e, 0x7e, 0x1d, 0x32, 0xcf, 0x78,
	0x7b, 0xb0, 0xa9, 0x89, 0x89, 0xd1, 0x23, 0x98, 0x74, 0x59, 0xab, 0x45, 0xbd, 0x96, 0xf6, 0x67,
	0xe9, 0x50, 0x4a, 0x9e, 0xab, 0x5d, 0x85, 0xd6, 0x47, 0x27, 0xa2, 0x46, 0x9b, 0x50, 0x6b, 0x93,
	0xf0, 0x78, 0xfb, 0xd4, 0xc7, 0x5e, 0x28, 0x0e, 0x02, 0xca, 0xb3, 0xef, 0xa5, 0xd1, 0x9a, 0x3d,
	0xcb, 0x83, 0x16, 0x60, 0x42, 0x00, 0x76, 0xb6, 0x8c, 0x0f, 0xe5, 0x7b, 0xe9, 0x27, 0xb4, 0x05,
	0x55, 0xf1, 0x6b, 0x9f, 0xf0, 0x13, 0x16, 0xbc, 0x0c, 0xb5, 0x4b, 0x1c, 0xec, 0x6a, 0x33, 0x5c,
	0xe8, 0x0b, 0xa8, 0xb6, 0x3b, 0x2e, 0xa7, 0xba, 0x10, 0xa8, 0xbd, 0xcf, 0x52, 0x6a, 0x86, 0x29,
	0xac, 0x9e, 0x60, 0x86, 0x03, 0x19, 0x30, 0xe9, 0x29, 0x69, 0xc6, 0xcf, 0xe5, 0x04, 0xa3, 0x47,
	0xf4, 0x10, 0x16, 0x7c, 0xe6, 0x6c, 0xed, 0x37, 0x9b, 0x44, 0x18, 0x93, 0x54, 0xed, 0xf3, 0xae,
	0xdc, 0xcb, 0x3e, 0x58, 0xf4, 0x1b, 0x58, 0x62, 0x6d, 0xca, 0x9b, 0xd4, 0x21, 0x36, 0x0e, 0x76,
	0xbc, 0x1f, 0xe4, 0x79, 0x53, 0x83, 0xef, 0x61, 0xdf, 0xb8, 0x33, 0x70, 0xf3, 0xce, 0xe5, 0x47,
	0x9f, 0x43, 0x95, 0x79, 0x49, 0xc5, 0x55, 0xfb, 0xc7, 0xf3, 0xe4, 0x65, 0xe8, 0x91, 0x05, 0x0b,
	0xcc, 0x17, 0x7a, 0xce, 0x82, 0x3d, 0xec, 0xe1, 0x16, 0xf9, 0x86, 0x1c, 0x1e, 0x33, 0xf6, 0x32,
	0x34, 0x7e, 0x31, 0x50, 0x52, 0x1f, 0x4e, 0x74, 0x1f, 0x66, 0xfc, 0x80, 0xb2, 0x80, 0xf2, 0xb3,
	0x4d, 0x17, 0x87, 0xa1, 0x2c, 0xca, 0xbd, 0x11, 0x57, 0x10, 0x7b, 0x91, 0x32, 0x24, 0x0c, 0xd8,
	0xe9, 0x99, 0xb1, 0x24, 0x07, 0x4d, 0x87, 0x84, 0x02, 0x1c, 0x87, 0x84, 0xe2, 0x01, 0x3d, 0x82,
	0xb2, 0xfc, 0xb1, 0xe3, 0x51, 0x6e, 0xbc, 0x99, 0x2f, 0xe1, 0x36, 0x22, 0x94, 0x66, 0x4a, 0x68,
	0xd1, 0x3b, 0x30, 0x1a, 0x3a, 0xa1, 0x71, 0x2b, 0x1f, 0x45, 0x36, 0xb7, 0x74, 0xd9, 0xca, 0x12,
	0xf8, 0xa8, 0xb4, 0x7a, 0x7b, 0x88, 0xd2, 0xea, 0x2a, 0x4c, 0xf0, 0x00, 0xdb, 0x24, 0x30, 0xde,
	0x92, 0xd4, 0xa9, 0xf8, 0xf2, 0x40, 0xc2, 0xa3, 0x84, 0x44, 0x51, 0xa1, 0x65, 0xa8, 0xf0, 0xa0,
	0x13, 0xf2, 0x2d, 0xd6, 0xc6, 0xd4, 0x33, 0x4c, 0xa9, 0x63, 0x69, 0x10, 0x5a, 0x83, 0x89, 0x4e,
	0x48, 0xf6, 0x36, 0x1b, 0xc6, 0xcf, 0x06, 0xae, 0xbf, 0xa6, 0x44, 0xab, 0x80, 0x02, 0xd2, 0x66,
	0x9c, 0x34, 0xa8, 0xcb, 0xf8, 0xba, 0xe3, 0x08, 0x87, 0x69, 0xdc, 0x57, 0x25, 0xaf, 0x5e, 0x8c,
	0x98, 0xb5, 0xb4, 0x27, 0x8e, 0xf1, 0x30, 0x3f, 0xeb, 0x1d, 0x09, 0x8f, 0x66, 0xad, 0xa8, 0xd0,
	0x7b, 0x30, 0xe3, 0x0b, 0xfe, 0x4d, 0x12, 0xf0, 0x46, 0xc0, 0xba, 0xd4, 0x21, 0x81, 0xf1, 0x91,
	0x2a, 0xb2, 0xf6, 0x20, 0xd0, 0x12, 0x94, 0x7f, 0x38, 0xe1, 0xda, 0x26, 0x7e, 0xac, 0x2e, 0x22,
	0x62, 0x80, 0xdc, 0x03, 0x1e, 0x1a, 0x8f, 0x7b, 0xf6, 0xe0, 0x20, 0xd9, 0x03, 0x1e, 0xa2, 0x45,
	0x91, 0x7d, 0x77, 0xa9, 0x34, 0x34, 0x9f, 0xa8, 0xfa, 0x7d, 0xf4, 0x8c, 0x36, 0x60, 0xaa, 0xcd,
	0x3a, 0x1e, 0xdf, 0xe3, 0x6e, 0x28, 0x46, 0x0e, 0x8d, 0x4f, 0x07, 0x2e, 0x55, 0x8e, 0x43, 0xde,
	0x96, 0xe0, 0x68, 0xa5, 0x3e, 0xd3, 0xb7, 0x25, 0x11, 0x00, 0x7d, 0x01, 0x35, 0x9b, 0x78, 0x3c,
	0xc0, 0xae, 0x5a, 0x0f, 0xe3, 0xf3, 0x81, 0x03, 0x64, 0x19, 0xcc, 0x5f, 0x42, 0x39, 0x7e, 0x23,
	0xb1, 0xeb, 0x3a, 0x25, 0x10, 0x09, 0x8e, 0xbe, 0x9d, 0x4a, 0x83, 0x4c, 0x0b, 0xaa, 0xe9, 0x95,
	0x17, 0xaf, 0xa8, 0x62, 0xa8, 0x75, 0x0f, 0xbb, 0x67, 0x21, 0x0d, 0x87, 0x88, 0xba, 0x72, 0x1c,
	0xe6, 0x5d, 0x98, 0x2d, 0x30, 0xe8, 0x22, 0x84, 0x74, 0xe5, 0xb5, 0x88, 0x0a, 0x2b, 0xd5, 0x83,
	0xf9, 0xfb, 0x69, 0x98, 0x2b, 0x0a, 0xc2, 0xfe, 0x5f, 0xd5, 0x2b, 0xc4, 0xb6, 0x76, 0x42, 0xce,
	0xda, 0x4d, 0xb5, 0xf4, 0x3a, 0x6c, 0x3a, 0x7f, 0x5b, 0xd3, 0x0c, 0xe9, 0x30, 0x18, 0x2e, 0x5c,
	0xf1, 0xa8, 0x5c, 0xae, 0xe2, 0x31, 0x7d, 0x91, 0x8a, 0xc7, 0x1d, 0x98, 0x72, 0x19, 0x76, 0x36,
	0xb0, 0x8b, 0x3d, 0x9b, 0x04, 0x3b, 0x0d, 0x59, 0x8b, 0x2b, 0x5b, 0x39, 0x28, 0x7a, 0x0c, 0x46,
	0x1a, 0xd2, 0x94, 0x41, 0x94, 0x85, 0xbd, 0x16, 0x11, 0x79, 0xae, 0x70, 0x68, 0x7d, 0xf1, 0x68,
	0x1b, 0x50, 0xc6, 0xab, 0xcb, 0xac, 0xdd, 0x40, 0xe7, 0x25, 0xf3, 0x05, 0x0c, 0x71, 0x71, 0xe6,
	0xbd, 0x73, 0x8a, 0x33, 0xb3, 0xaf, 0xb0, 0x38, 0x33, 0xf7, 0x1a, 0x8b, 0x33, 0xf3, 0x7f, 0x88,
	0xe2, 0xcc, 0xc2, 0x6b, 0x2d, 0xce, 0xdc, 0x18, 0xa2, 0x38, 0x93, 0xbf, 0xf1, 0x30, 0xfa, 0xdc,
	0x78, 0x6c, 0xa4, 0x8b, 0x38, 0x37, 0x2f, 0xb0, 0x0f, 0xe7, 0x55, 0x74, 0xde, 0xb8, 0x7a, 0x45,
	0x67, 0xe9, 0x15, 0x54, 0x74, 0xde, 0x4c, 0x55, 0x74, 0x1e, 0xea, 0x8a, 0x8e, 0x8a, 0x30, 0xcc,
	0x7e, 0xf9, 0xed, 0xf7, 0x5d, 0xdf, 0xcb, 0x14, 0x77, 0x0a, 0xaa, 0x31, 0xb7, 0x5f, 0x43, 0x35,
	0x66, 0xf9, 0xaa, 0xd5, 0x98, 0x07, 0x30, 0x4f, 0x4e, 0x39, 0x09, 0x3c, 0xec, 0x1e, 0x04, 0xf8,
	0xe8, 0x88, 0xda, 0xda, 0xcd, 0xab, 0x40, 0xa6, 0x18, 0x99, 0x2f, 0x5d, 0xfd, 0xec, 0x8a, 0xa5,
	0xab, 0x5f, 0x41, 0x55, 0x97, 0x13, 0x94, 0xe1, 0x79, 0xfb, 0x62, 0xb5, 0x9b, 0x0c, 0x73, 0xdf,
	0x82, 0xd0, 0x3b, 0xaf, 0xa2, 0x20, 0xd4, 0x53, 0xbc, 0xba, 0x73, 0xa5, 0xe2, 0x55, 0xa6, 0xbe,
	0xf4, 0xcb, 0x8b, 0xd4, 0x97, 0x8e, 0xc1, 0xe8, 0xa7, 0x81, 0x97, 0xbc, 0xa9, 0x5d, 0x80, 0x89,
	0xb0, 0x73, 0x74, 0x44, 0x4f, 0x75, 0x25, 0x4a, 0x3f, 0x99, 0x7f, 0x01, 0xb3, 0x05, 0x69, 0xe0,
	0x25, 0x07, 0x51, 0xb1, 0xf0, 0xce, 0xee, 0xc6, 0x10, 0xd1, 0x8f, 0xa6, 0x34, 0x5d, 0x40, 0xbd,
	0x59, 0xde, 0x25, 0xc7, 0x5f, 0x86, 0x8a, 0x6e, 0x35, 0x91, 0x19, 0x8c, 0x7a, 0xd3, 0x34, 0xc8,
	0xfc, 0xab, 0x12, 0xbc, 0xf1, 0xb4, 0xc3, 0x0f, 0x59, 0xc7, 0x73, 0x32, 0x4a, 0xaf, 0xc7, 0xfd,
	0x1c, 0xc6, 0xda, 0xcc, 0x51, 0xac, 0x53, 0xe9, 0x02, 0xca, 0x39, 0x4c, 0xab, 0x7b, 0xcc, 0x21,
	0x96, 0xe4, 0x33, 0x57, 0x60, 0x4c, 0x3c, 0xa1, 0x1a, 0x94, 0xd7, 0x77, 0x77, 0x9f, 0x7e, 0xf3,
	0x62, 0x7d, 0xff, 0xbb, 0xfa, 0x35, 0x34, 0x03, 0x35, 0x6b, 0xfb, 0xcb, 0x9d, 0xe6, 0x81, 0xf5,
	0xdd, 0x8b, 0xa7, 0xfb, 0xbb, 0xdf, 0xd5, 0x4b, 0xe6, 0x7f, 0x57, 0xa1, 0x22, 0x83, 0xfc, 0x2b,
	0xbd, 0x71, 0x51, 0xb4, 0x37, 0x72, 0xd5, 0x68, 0xaf, 0x4f, 0x24, 0x97, 0x8f, 0x08, 0xc7, 0x0a,
	0x22, 0xc2, 0xbc, 0x83, 0x19, 0xef, 0xe3, 0x60, 0xe2, 0x16, 0x97, 0x89, 0x74, 0x8b, 0xcb, 0xdb,
	0x50, 0x93, 0x79, 0x57, 0x13, 0xb7, 0x7d, 0x61, 0xcd, 0xe4, 0x9d, 0x53, 0xc9, 0xca, 0x02, 0xb3,
	0x37, 0x0c, 0xe5, 0xa1, 0x6f, 0x18, 0x56, 0x60, 0x5a, 0x1d, 0xcf, 0x24, 0xf7, 0x06, 0xdd, 0x31,
	0x95, 0x05, 0x47, 0x21, 0x6b, 0xe5, 0x32, 0x21, 0x6b, 0x3e, 0x20, 0xaa, 0x5e, 0x3a, 0x20, 0xb2,
	0xe1, 0xf6, 0x4b, 0x42, 0x7c, 0xec, 0xd2, 0xae, 0x58, 0x5a, 0x11, 0xd1, 0xca, 0xe3, 0xe1, 0x11,
	0x5b, 0x0c, 0xbc, 0xde, 0x22, 0x71, 0x3b, 0x54, 0x7e, 0xa7, 0xb7, 0x74, 0x33, 0x9f, 0x35, 0x48,
	0x02, 0xda, 0x85, 0xba, 0x43, 0x7c, 0x97, 0x9d, 0xb5, 0x89, 0xc7, 0x55, 0x80, 0xaa, 0x2f, 0x9d,
	0x07, 0x3b, 0xd9, 0x1e, 0x4e, 0x61, 0xf0, 0xec, 0xb8, 0x50, 0x82, 0x06, 0x1b, 0xbc, 0x98, 0x38,
	0x95, 0x45, 0xcf, 0x0d, 0x9d, 0x45, 0xeb, 0x28, 0x7d, 0xfe, 0x22, 0x51, 0x7a, 0x81, 0xe3, 0x36,
	0x5e, 0x83, 0xe3, 0xbe, 0x79, 0xf5, 0x6b, 0x94, 0x8c, 0x0b, 0x5e, 0xbc, 0xa2, 0x0b, 0x3e, 0x86,
	0xb7, 0x94, 0xc5, 0x68, 0x88, 0xe5, 0xb4, 0x99, 0xdb, 0xf4, 0xa8, 0x88, 0x28, 0xc5, 0x44, 0x22,
	0xcb, 0xa6, 0x83, 0xab, 0xf3, 0x56, 0x7e, 0xb0, 0x10, 0x74, 0x04, 0xcb, 0x7d, 0x89, 0x76, 0x3c,
	0x35, 0xd0, 0x9b, 0x03, 0x07, 0x1a, 0x28, 0xa3, 0x20, 0x5d, 0xb8, 0x75, 0x85, 0x74, 0xe1, 0x8f,
	0xa0, 0xaa, 0x74, 0x51, 0xe5, 0x4d, 0x3a, 0x98, 0x7b, 0x23, 0x15, 0x4b, 0x27, 0x96, 0x5a, 0xa7,
	0x56, 0x19, 0x06, 0xf4, 0x11, 0xdc, 0xf8, 0xe1, 0xe4, 0x65, 0x28, 0x8c, 0x8f, 0xdb, 0x25, 0xc1,
	0xf6, 0x29, 0x0f, 0xb0, 0xf0, 0xe4, 0x9b, 0xeb, 0x32, 0x88, 0x2b, 0x5b, 0xfd, 0xd0, 0xe8, 0x03,
	0x98, 0xf4, 0x65, 0x77, 0x53, 0xa8, 0x4b, 0x52, 0x37, 0x0b, 0x76, 0x59, 0xbd, 0x83, 0x15, 0x51,
	0x46, 0xe5, 0x6d, 0xb3, 0xa7, 0xbd, 0xf0, 0x67, 0x83, 0x6b, 0x60, 0xe6, 0x3f, 0x96, 0x00, 0xc9,
	0xf7, 0xd1, 0x21, 0x86, 0x76, 0x40, 0x77, 0x60, 0x4a, 0x47, 0x5a, 0x51, 0xb6, 0x5d, 0xd2, 0xa5,
	0xec, 0x0c, 0x14, 0x3d, 0x83, 0x79, 0x1a, 0x33, 0x72, 0xa1, 0xbe, 0x24, 0xd8, 0x4b, 0x7c, 0x66,
	0xaa, 0x75, 0xae, 0x90, 0xcc, 0x2a, 0xe6, 0x16, 0xde, 0x25, 0x42, 0xb8, 0x38, 0x0c, 0x75, 0xa3,
	0x58, 0x06, 0x66, 0xee, 0xc0, 0x8c, 0x9c, 0x78, 0xc6, 0x65, 0x5f, 0xae, 0x8f, 0x84, 0xc3, 0xf4,
	0x01, 0x71, 0x49, 0x9b, 0xf0, 0xe0, 0x4a, 0x82, 0xd0, 0x5d, 0x18, 0xe9, 0xae, 0xe9, 0x4b, 0xa6,
	0x94, 0xc2, 0xc4, 0xc2, 0x9f, 0xaf, 0xe9, 0xcc, 0x61, 0xa4, 0xbb, 0x66, 0xfe, 0xcd, 0x28, 0xcc,
	0xf4, 0x60, 0x2e, 0x39, 0xf0, 0xb7, 0x30, 0xd3, 0x26, 0x1c, 0x3b, 0x98, 0xe3, 0x17, 0xe4, 0xd4,
	0x3e, 0x16, 0xb9, 0xbe, 0xbe, 0xa8, 0xbb, 0x5b, 0x38, 0x8f, 0x3d, 0x4d, 0xbd, 0xad, 0x89, 0xf5,
	0xbc, 0xea, 0xed, 0x1c, 0x1c, 0x6d, 0x03, 0xf8, 0x01, 0x6b, 0x13, 0x7e, 0x4c, 0x3a, 0x51, 0x21,
	0xeb, 0x9d, 0x42, 0x91, 0x8d, 0x98, 0x4c, 0x0b, 0x4b, 0x31, 0xa2, 0xaf, 0xa0, 0x12, 0x72, 0x6c,
	0xbf, 0x74, 0x02, 0xda, 0x25, 0x81, 0x5e, 0xa2, 0x3b, 0x85, 0x72, 0x9a, 0x82, 0x6e, 0x4b, 0xd2,
	0x69, 0x41, 0x69, 0x56, 0xf4, 0x27, 0x30, 0x83, 0x6d, 0x9b, 0x84, 0xe1, 0x0b, 0x97, 0xb5, 0x5e,
	0xf8, 0x49, 0x47, 0x75, 0x65, 0xed, 0x7e, 0xa1, 0xbc, 0x75, 0x49, 0xbd, 0xcb, 0x5a, 0x4a, 0x53,
	0x9e, 0x50, 0x37, 0xb9, 0x40, 0x98, 0xc6, 0x59, 0xa4, 0x89, 0xe1, 0xad, 0x81, 0xab, 0x84, 0x3e,
	0x85, 0xca, 0x09, 0x0e, 0xdb, 0xc3, 0xc7, 0x58, 0x69, 0x72, 0xf3, 0xaf, 0x4b, 0xf0, 0xc6, 0x39,
	0xcb, 0x76, 0x49, 0x0d, 0xb8, 0xda, 0x9c, 0x7e, 0x37, 0x0a, 0x4b, 0xe7, 0x6d, 0xc1, 0x25, 0x27,
	0xf5, 0x20, 0xb9, 0xaf, 0x1a, 0xe2, 0xe2, 0x39, 0xba, 0xac, 0x7a, 0x0c, 0xd0, 0x66, 0x1e, 0xe5,
	0x4c, 0xd8, 0xb9, 0x21, 0xae, 0x6c, 0x53, 0xd4, 0xe8, 0x21, 0x5c, 0xe7, 0xcc, 0x67, 0x2e, 0x6b,
	0x45, 0x17, 0xd5, 0xe7, 0x71, 0xc6, 0xb4, 0x68, 0x0b, 0xa6, 0x1d, 0x1a, 0x8a, 0x59, 0xc7, 0x2e,
	0x70, 0x70, 0x7d, 0x31, 0xcf, 0x82, 0xbe, 0x82, 0x29, 0xe5, 0x09, 0x9e, 0x76, 0x49, 0x10, 0x50,
	0x87, 0x0c, 0xdb, 0x90, 0x6a, 0xe5, 0xf8, 0xcc, 0xbf, 0x2f, 0xc1, 0x9d, 0xe1, 0x74, 0xf8, 0x92,
	0x5b, 0xf3, 0x25, 0xcc, 0xb8, 0xac, 0xf5, 0x0d, 0xf5, 0x1c, 0x76, 0x12, 0x85, 0x88, 0x7a, 0x93,
	0xce, 0x89, 0x21, 0x7b, 0x79, 0xcc, 0x6d, 0x6d, 0x87, 0xd3, 0x0e, 0x11, 0xdd, 0x87, 0xd9, 0xb0,
	0x73, 0x18, 0xda, 0x01, 0x3d, 0x24, 0x4e, 0x72, 0x49, 0x5c, 0x92, 0xc5, 0xc9, 0x22, 0x94, 0xf9,
	0x5b, 0xa8, 0xa4, 0x6a, 0x54, 0x71, 0x7d, 0xb1, 0x94, 0xaa, 0x2f, 0x22, 0x18, 0xf3, 0x59, 0xc0,
	0xe5, 0x2c, 0xc7, 0x2d, 0xf9, 0x1b, 0x2d, 0xc2, 0x75, 0x11, 0x28, 0xcb, 0xd2, 0xfc, 0xa8, 0x84,
	0xc7, 0xcf, 0xe8, 0x16, 0x80, 0x6a, 0xf9, 0x96, 0xd8, 0x31, 0x89, 0x4d, 0x41, 0xcc, 0x7f, 0x9d,
	0x84, 0x4a, 0xea, 0x86, 0x4a, 0xd0, 0x8b, 0xfc, 0x45, 0x5d, 0xd3, 0xe9, 0xa6, 0xe3, 0x14, 0x44,
	0x64, 0x24, 0x3a, 0x7d, 0xd4, 0x37, 0x40, 0xea, 0x3b, 0x8e, 0x2c, 0x10, 0xbd, 0x07, 0x33, 0x36,
	0x6b, 0xfb, 0xcc, 0x13, 0xa1, 0x70, 0xf4, 0x15, 0x83, 0xca, 0x6c, 0x7a, 0x11, 0xc9, 0x5d, 0x81,
	0xec, 0xc0, 0xee, 0xb4, 0x7d, 0x9d, 0xc4, 0x0c, 0x71, 0x57, 0x10, 0x71, 0x88, 0xc5, 0xd6, 0xdf,
	0x6e, 0xe8, 0x80, 0x48, 0x95, 0x56, 0xd4, 0x7d, 0x77, 0x11, 0x4a, 0xa4, 0x3f, 0x11, 0xb8, 0xa1,
	0xeb, 0xc6, 0xfa, 0xfe, 0x3b, 0x07, 0x4e, 0x72, 0xb3, 0xa9, 0x74, 0x6e, 0xb6, 0x02, 0xd3, 0xd4,
	0xcb, 0xf2, 0xd7, 0xf5, 0xfd, 0x79, 0x16, 0x9c, 0xf9, 0x94, 0x03, 0xe5, 0x3e, 0xe5, 0x78, 0x2c,
	0x5c, 0x0b, 0xed, 0x52, 0x97, 0xb4, 0x88, 0xa3, 0xab, 0xc5, 0xe7, 0x9e, 0xf3, 0x84, 0x1a, 0x6d,
	0xc0, 0x52, 0x40, 0xb0, 0x43, 0x3d, 0x12, 0x86, 0x3b, 0x1e, 0xe5, 0x14, 0xbb, 0x5b, 0xc4, 0xc5,
	0x67, 0x4d, 0x62, 0x33, 0xcf, 0x51, 0xf5, 0xe2, 0x9a, 0x75, 0x2e, 0x0d, 0x7a, 0x08, 0x0b, 0x31,
	0xbe, 0x41, 0x02, 0xca, 0x9c, 0x88, 0x7b, 0x5e, 0x72, 0xf7, 0xc1, 0xa2, 0x4f, 0xe1, 0x66, 0x8c,
	0x79, 0x82, 0xa9, 0xdb, 0x09, 0xc8, 0xc1, 0x71, 0x40, 0xc2, 0x63, 0xe6, 0x3a, 0xb2, 0xae, 0x5b,
	0xb3, 0xfa, 0x13, 0x08, 0x2d, 0x0b, 0x39, 0xe6, 0x1d, 0x59, 0xc3, 0x92, 0x37, 0xbe, 0x35, 0x2b,
	0x05, 0xc9, 0x66, 0xb4, 0xc6, 0x05, 0x32, 0xda, 0xe8, 0x32, 0xf3, 0xa6, 0x0c, 0xbd, 0xea, 0x09,
	0x8f, 0x82, 0xc7, 0xd7, 0x98, 0x6b, 0x30, 0xa7, 0x77, 0x39, 0xb2, 0x5b, 0x4a, 0x5f, 0x96, 0xe4,
	0xf6, 0x14, 0xe2, 0xd0, 0xe7, 0x50, 0x76, 0xe9, 0x11, 0xb1, 0xcf, 0x6c, 0x97, 0xe8, 0x9a, 0xdd,
	0x60, 0x9b, 0x96, 0xb0, 0x20, 0x07, 0x6e, 0x8b, 0x97, 0x5f, 0xf7, 0x65, 0xda, 0x2f, 0xec, 0xc6,
	0x33, 0x8f, 0x53, 0x57, 0x9e, 0xbe, 0x26, 0xc7, 0x01, 0x8f, 0x8a, 0x76, 0xe7, 0xed, 0xff, 0x20,
	0x11, 0xe6, 0x6f, 0x60, 0x3a, 0x77, 0x81, 0x9c, 0xe8, 0x6f, 0x29, 0xad, 0xbf, 0x99, 0x35, 0x1e,
	0x1f, 0x76, 0x8d, 0xcd, 0x4d, 0xb8, 0xd1, 0xa7, 0x77, 0x58, 0x04, 0xe1, 0xb6, 0xdf, 0x89, 0xba,
	0xbd, 0x44, 0xf2, 0x2f, 0xbb, 0x25, 0xda, 0x2c, 0x38, 0x8b, 0x8a, 0x6c, 0xea, 0xc9, 0xfc, 0x12,
	0xca, 0xf1, 0x95, 0x35, 0x7a, 0x0c, 0xe3, 0x9c, 0xbd, 0x24, 0xde, 0x85, 0x3e, 0x5c, 0x50, 0x2c,
	0xe6, 0x9f, 0x41, 0x35, 0x5d, 0x34, 0x47, 0x4b, 0x50, 0x96, 0xf7, 0xa4, 0x0d, 0xcc, 0x8f, 0xf5,
	0x44, 0x12, 0x40, 0x6c, 0x50, 0x47, 0x52, 0x06, 0x55, 0xa8, 0xa2, 0x94, 0x20, 0x2b, 0x64, 0xfa,
	0x6b, 0x8c, 0x04, 0x62, 0xfe, 0x6d, 0x09, 0x6a, 0x3a, 0xd2, 0x8f, 0xaf, 0x36, 0x2b, 0x38, 0x95,
	0x66, 0x95, 0x86, 0xd4, 0x84, 0x34, 0x93, 0x08, 0xee, 0xa3, 0x52, 0x73, 0x23, 0x32, 0xe7, 0x35,
	0x2b, 0x03, 0x8b, 0x67, 0x3b, 0x9a, 0x35, 0xff, 0xf9, 0x2e, 0x4c, 0xf3, 0xf7, 0x63, 0x30, 0x5f,
	0xd8, 0x5d, 0x81, 0xbe, 0x85, 0x9b, 0xca, 0x4c, 0x26, 0xed, 0x1c, 0x1b, 0x67, 0xba, 0x27, 0x69,
	0x88, 0x60, 0xa4, 0x3f, 0x33, 0xfa, 0x0e, 0x66, 0x3d, 0xd2, 0x25, 0x7a, 0xc0, 0x4b, 0x7e, 0xcb,
	0x60, 0x15, 0xc9, 0x90, 0x05, 0x6d, 0xf7, 0x04, 0x9f, 0x85, 0x39, 0xd9, 0xd5, 0x8b, 0x16, 0xb4,
	0x0b, 0x84, 0xa0, 0x5d, 0x98, 0x0d, 0xc8, 0x49, 0x40, 0x39, 0x59, 0xf7, 0xfd, 0xaf, 0x0e, 0x0e,
	0x1a, 0x8d, 0x80, 0x1d, 0x12, 0x69, 0xb8, 0xcf, 0x5f, 0x8b, 0x22, 0x36, 0xb4, 0x0c, 0x15, 0x2a,
	0xe5, 0xcb, 0x72, 0x8f, 0xde, 0x94, 0x34, 0x08, 0x59, 0x30, 0xab, 0x1e, 0x49, 0x26, 0x35, 0x1f,
	0xb6, 0x3b, 0xa8, 0x88, 0x59, 0x04, 0x58, 0xec, 0x30, 0xb3, 0x34, 0xc3, 0x56, 0x7c, 0x72, 0x7c,
	0x2a, 0xc5, 0xfc, 0x41, 0x15, 0xbf, 0x9e, 0x59, 0xbb, 0xd2, 0x6e, 0xcb, 0x14, 0x33, 0x81, 0x99,
	0x7f, 0x39, 0x02, 0xd5, 0x74, 0x27, 0x08, 0x7a, 0x04, 0x93, 0x22, 0x1d, 0x70, 0x58, 0xab, 0xb7,
	0x19, 0x53, 0x11, 0x6e, 0x29, 0x74, 0xd4, 0x7f, 0xa5, 0xa9, 0xd1, 0x67, 0xc2, 0x7e, 0xb6, 0x8e,
	0x79, 0xc8, 0x89, 0xaf, 0xb5, 0xef, 0x76, 0x9e, 0x75, 0x57, 0x10, 0x34, 0x39, 0xf1, 0xa3, 0xde,
	0x97, 0x98, 0x03, 0x3d, 0x80, 0x89, 0x1f, 0xa9, 0xff, 0x92, 0x46, 0x0d, 0x8c, 0x4b, 0x79, 0xde,
	0xef, 0x25, 0x36, 0xba, 0x4e, 0x56, 0xb4, 0x68, 0x33, 0x9b, 0x73, 0x8d, 0xe5, 0xbf, 0x83, 0x50,
	0xac, 0xcd, 0x84, 0xa4, 0x20, 0xdd, 0x32, 0xef, 0xc1, 0x6c, 0xc1, 0x9b, 0x21, 0x03, 0x26, 0xb1,
	0x6e, 0xc0, 0x50, 0xa6, 0x26, 0x7a, 0x34, 0x9b, 0x30, 0x5f, 0xf8, 0x3e, 0xfd, 0x59, 0x84, 0x2e,
	0xa9, 0x3c, 0xec, 0x40, 0xda, 0x42, 0x5d, 0xaa, 0x4f, 0x81, 0xcc, 0x55, 0x40, 0xbd, 0x2f, 0x7a,
	0xce, 0x24, 0xfe, 0xab, 0x04, 0x37, 0xfa, 0xbc, 0x1e, 0xba, 0x0f, 0xe3, 0x0e, 0x39, 0xec, 0xb4,
	0x86, 0x88, 0x96, 0x15, 0x21, 0x7a, 0x00, 0xf3, 0x6d, 0x7c, 0xba, 0xdf, 0x69, 0x1f, 0x92, 0xe0,
	0xe9, 0xd1, 0x3a, 0xe7, 0x01, 0x3d, 0xec, 0x70, 0x12, 0x6a, 0xd3, 0x55, 0x8c, 0x14, 0xe1, 0x45,
	0x1a, 0x91, 0x3a, 0x02, 0xaa, 0xa0, 0xde, 0x07, 0x8b, 0x1e, 0x83, 0x91, 0xc2, 0xec, 0x91, 0x30,
	0xc4, 0xad, 0xe8, 0x4b, 0x4e, 0x55, 0x66, 0xef, 0x8b, 0x37, 0xff, 0x1c, 0x60, 0x03, 0x87, 0x91,
	0xb5, 0xfe, 0x1a, 0x90, 0x0e, 0x15, 0xad, 0xad, 0x03, 0xd2, 0xf6, 0x5d, 0xcc, 0x49, 0x38, 0xc4,
	0x6b, 0x17, 0x70, 0x89, 0xe0, 0xb7, 0x1b, 0xf7, 0xc4, 0x8a, 0x03, 0xa3, 0x76, 0x29, 0x0b, 0x34,
	0x3f, 0x02, 0xa4, 0x5a, 0x61, 0x2c, 0xd9, 0xb8, 0xa4, 0xe7, 0x91, 0x3f, 0x6b, 0xa5, 0x82, 0xb3,
	0xf6, 0x2f, 0xe3, 0x30, 0x21, 0x47, 0x0f, 0xd1, 0x3b, 0x30, 0x6a, 0x7b, 0x54, 0x1f, 0x93, 0xd9,
	0xcc, 0xf7, 0xbd, 0x51, 0x97, 0x91, 0xed, 0x51, 0xf4, 0x09, 0x54, 0x65, 0x8b, 0x93, 0xcd, 0x02,
	0xe2, 0xe8, 0x55, 0xcd, 0x94, 0xbb, 0x32, 0x1f, 0x35, 0x5a, 0x19, 0x62, 0xf4, 0x00, 0xae, 0xeb,
	0xa6, 0xe4, 0x28, 0x00, 0x30, 0x7a, 0x7a, 0x34, 0xe2, 0xef, 0x82, 0x22, 0x4a, 0xb4, 0x0a, 0x13,
	0x2d, 0xd9, 0x95, 0xa3, 0x93, 0xc3, 0x85, 0x7c, 0xfb, 0x65, 0x74, 0x02, 0x15, 0x95, 0xbc, 0x8f,
	0x17, 0xb9, 0x91, 0xee, 0x37, 0x99, 0x2f, 0xac, 0x21, 0x5a, 0x8a, 0x06, 0x3d, 0x82, 0x32, 0x8f,
	0x32, 0x3e, 0xdd, 0x09, 0x78, 0xb3, 0xa0, 0xa0, 0x11, 0x59, 0x87, 0x98, 0x16, 0x7d, 0x03, 0x0b,
	0x61, 0xd6, 0x07, 0xea, 0x66, 0x3e, 0x7d, 0x27, 0x90, 0xb2, 0x34, 0x85, 0xbe, 0xd2, 0xea, 0xc3,
	0x2e, 0x3b, 0xa8, 0xf5, 0x67, 0xd9, 0x71, 0xb4, 0x34, 0x33, 0x44, 0x07, 0x75, 0x8e, 0x07, 0xdd,
	0x87, 0xb2, 0xea, 0x24, 0x17, 0xdb, 0x3a, 0xdb, 0x7f, 0x5b, 0xaf, 0x4b, 0xaa, 0x4d, 0x8f, 0x66,
	0x3a, 0xc8, 0xe6, 0x73, 0x1d, 0x64, 0x8f, 0x00, 0xda, 0x24, 0xd4, 0xdd, 0xe1, 0x3a, 0x18, 0xed,
	0x5b, 0xe4, 0x4c, 0x91, 0xa2, 0x15, 0x18, 0x3b, 0xc4, 0x21, 0xd1, 0x91, 0x66, 0xaa, 0xd9, 0x3c,
	0x39, 0x32, 0x96, 0xa4, 0x40, 0x5f, 0x68, 0xd5, 0xd2, 0x6a, 0xac, 0xaf, 0x7e, 0x97, 0xf2, 0x9d,
	0x76, 0x69, 0x25, 0xb7, 0x32, 0x1c, 0xa6, 0x01, 0x0b, 0xc5, 0x8e, 0xc8, 0xbc, 0x0d, 0x6f, 0x9e,
	0xeb, 0xbd, 0xcd, 0x05, 0x98, 0x2b, 0xba, 0x21, 0x30, 0x67, 0x60, 0x3a, 0x57, 0x03, 0x36, 0xff,
	0x14, 0x6a, 0x99, 0xcf, 0x4d, 0x5e, 0xf1, 0x7d, 0xf0, 0x34, 0xd4, 0x32, 0xab, 0xf9, 0xee, 0xd7,
	0x7d, 0xca, 0xbd, 0x68, 0x1a, 0x2a, 0xcf, 0xf6, 0x9b, 0x8d, 0xed, 0xcd, 0x9d, 0x27, 0x3b, 0xdb,
	0x5b, 0xf5, 0x6b, 0xa8, 0x02, 0x93, 0x5b, 0xdb, 0x4f, 0xd6, 0x9f, 0xed, 0x1e, 0xd4, 0x4b, 0x08,
	0x60, 0xa2, 0x79, 0x60, 0xed, 0x6c, 0x1e, 0xd4, 0x47, 0xd0, 0x24, 0x8c, 0x3e, 0x7d, 0xf2, 0xa4,
	0x3e, 0xfa, 0xee, 0x7a, 0x94, 0xb0, 0x08, 0xb4, 0xf2, 0x58, 0xf5, 0x6b, 0xa8, 0x96, 0x72, 0x94,
	0xf5, 0x92, 0x10, 0xa3, 0x5d, 0x68, 0x7d, 0x44, 0x0c, 0x92, 0xf2, 0x4c, 0xf5, 0xd1, 0x8d, 0x85,
	0x7f, 0xfe, 0xe9, 0xd6, 0xb5, 0x7f, 0xfb, 0xe9, 0xd6, 0xb5, 0xff, 0xf8, 0xe9, 0xd6, 0xb5, 0xef,
	0xe3, 0x3f, 0xb4, 0x38, 0x9c, 0x90, 0x2f, 0xfb, 0xc1, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x44,
	0xea, 0x83, 0x7d, 0x0f, 0x43, 0x00, 0x00,
}
